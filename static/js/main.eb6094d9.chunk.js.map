{"version":3,"sources":["utils/api.ts","utils/use-fetch-data.ts","utils/round.ts","utils/rank-stocks.ts","App.tsx","index.tsx"],"names":["useFetchStocks","url","transform","waitFor","shouldExecute","useState","isLoading","data","undefined","error","state","setState","updateState","newState","useEffect","a","fetch","response","ok","json","status","fetchData","useFetchData","urlJoin","process","stocks","round","value","Math","Number","EPSILON","computeRankScores","roi","safety","filter","stock","fairPrice","discountScore","filterExtremeScores","stats","growthRate","filterExtremeStats","map","stockStats","est10thYearPrice","Array","reduce","memo","computeFairPrice","currentPrice","fundamentalsScore","App","margin","setMargin","setRoi","computedStocks","sortedStocks","sort","b","name","localeCompare","style","height","Header","align","Title","level","color","grey","marginBottom","Content","ghost","display","direction","size","width","onChange","spinning","dataSource","Link","href","symbol","target","sector","profile","price","fair","discount","String","columns","title","dataIndex","render","red","primary","green","Text","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eb6094d9.chunk.js","sourcesContent":["import urlJoin from 'url-join';\n\nimport { StockFromServer } from '../types';\nimport { useFetchData } from './use-fetch-data';\n\nexport function useFetchStocks(): {\n  isLoading: boolean;\n  stocks?: Array<StockFromServer>;\n  error: Error;\n} {\n  const { isLoading, error, data } = useFetchData<Array<StockFromServer>>(\n    urlJoin(process.env.REACT_APP_API_HOST, 'api/stocks'),\n  );\n  return {\n    isLoading,\n    error,\n    stocks: data,\n  };\n}\n","import { useEffect, useState } from 'react';\n\ninterface State<T> {\n  isLoading: boolean;\n  data?: T;\n  error?: any;\n}\n\nexport function useFetchData<T>(\n  url: string,\n  { transform, waitFor = true, shouldExecute = true }: any = {},\n) {\n  // Use single state to avoid unncessary re-renders\n  const [state, setState] = useState({\n    isLoading: true,\n    data: undefined,\n    error: undefined,\n  } as State<T>);\n  const updateState = (newState: State<T>) => setState((state) => ({ ...state, ...newState }));\n\n  useEffect(() => {\n    const fetchData = async () => {\n      updateState({ isLoading: true });\n      const response = await fetch(url);\n\n      if (response.ok) {\n        const data = await response.json();\n        updateState({ isLoading: false, data: transform != null ? transform(data) : data });\n      } else {\n        updateState({ isLoading: false, error: { status: response.status } });\n      }\n    };\n\n    if (waitFor && shouldExecute) {\n      fetchData();\n    }\n  }, [url, waitFor]);\n\n  return state;\n}\n","export function round(value: number): number {\n  return Math.round((value + Number.EPSILON) * 100) / 100;\n}\n","import { Stock, StockFromServer } from '../types';\nimport { round } from './round';\n\nfunction filterExtremeStats(stocks: Array<StockFromServer>): Array<StockFromServer> {\n  return stocks.filter((stock) => stock.stats.growthRate > 0.1 && stock.stats.growthRate < 1);\n}\n\nfunction filterExtremeScores(stocks: Array<Stock>): Array<Stock> {\n  return stocks.filter((stock) => stock.fairPrice > 0 && stock.discountScore < 1.1);\n}\n\nfunction computeFairPrice(\n  roi: number,\n  safety: number,\n  stockStats: StockFromServer['stats'],\n): number {\n  const { est10thYearPrice } = stockStats;\n  const fairValue = [...Array(9)].reduce((memo) => memo / (1 + roi), est10thYearPrice);\n  return round(fairValue * safety);\n}\n\nexport function computeRankScores(\n  roi: number,\n  safety: number,\n  stocks: Array<StockFromServer>,\n): Array<Stock> {\n  const computed = filterExtremeStats(stocks).map((stock) => {\n    const fairPrice = computeFairPrice(roi, safety, stock.stats);\n    return {\n      ...stock,\n      fairPrice,\n      discountScore: round(stock.stats.currentPrice / fairPrice),\n      fundamentalsScore: 0,\n    };\n  });\n  return filterExtremeScores(computed);\n}\n","import { green, grey, red } from '@ant-design/colors';\nimport { Layout, PageHeader, Slider, Space, Spin, Table, Tag, Typography } from 'antd';\nimport { useState } from 'react';\n\n// import { Stock } from './types';\nimport { computeRankScores, useFetchStocks } from './utils';\n\nexport const App = () => {\n  const { isLoading, stocks = [] } = useFetchStocks();\n  const [margin, setMargin] = useState<number>(50);\n  const [roi, setRoi] = useState<number>(20);\n\n  const safety = 1 - margin / 100;\n\n  const computedStocks = computeRankScores(roi / 100, safety, stocks);\n  const sortedStocks = [...computedStocks].sort((a, b) => a.name.localeCompare(b.name));\n\n  // console.log(\n  //   sortedStocks.reduce(\n  //     (memo, s) => ({ ...memo, [s.profile.sector]: (memo[s.profile.sector] ?? 0) + 1 }),\n  //     {} as Record<Stock['profile']['sector'], number>,\n  //   ),\n  // );\n\n  return (\n    <Layout style={{ height: '100vh' }}>\n      <Layout.Header>\n        <Space align=\"center\" style={{ height: '100%' }}>\n          <Typography.Title level={2} style={{ color: grey[0], marginBottom: 0 }}>\n            The Stock depot\n          </Typography.Title>\n        </Space>\n      </Layout.Header>\n      <Layout.Content>\n        <div style={{ height: '100%', margin: 20 }}>\n          <PageHeader ghost={false}>\n            <div style={{ display: 'flex' }}>\n              <div>\n                <div>Margin of safety (%)</div>\n                <Space direction=\"vertical\" size=\"large\">\n                  <div style={{ width: 200 }}>\n                    <Slider value={margin} onChange={setMargin} />\n                  </div>\n                </Space>\n              </div>\n              <div>\n                <div>Desired rate of return (%)</div>\n                <Space direction=\"vertical\" size=\"large\">\n                  <div style={{ width: 200 }}>\n                    <Slider value={roi} onChange={setRoi} />\n                  </div>\n                </Space>\n              </div>\n            </div>\n          </PageHeader>\n          <Spin spinning={isLoading}>\n            <Table\n              dataSource={sortedStocks.map((stock) => ({\n                name: (\n                  <Typography.Link\n                    href={`https://finance.yahoo.com/quote/${stock.symbol}`}\n                    target=\"_blank\"\n                  >\n                    {stock.name} ({stock.symbol})\n                  </Typography.Link>\n                ),\n                sector: stock.profile.sector,\n                price: `$${stock.stats.currentPrice}`,\n                fair: `$${stock.fairPrice}`,\n                discount: String(\n                  Math.round((1 - stock.stats.currentPrice / stock.fairPrice) * 100),\n                ),\n              }))}\n              columns={[\n                {\n                  title: 'Name',\n                  dataIndex: 'name',\n                },\n                {\n                  title: 'Sector',\n                  dataIndex: 'sector',\n                },\n                {\n                  title: 'Current Price',\n                  dataIndex: 'price',\n                },\n                {\n                  title: 'Est. Fair Price',\n                  dataIndex: 'fair',\n                },\n                {\n                  title: 'Discount',\n                  dataIndex: 'discount',\n                  render: (discount) =>\n                    discount <= 0 ? (\n                      <Tag color={red.primary}>No discount</Tag>\n                    ) : (\n                      <Tag color={green.primary}>{`-${discount}%`}</Tag>\n                    ),\n                },\n              ]}\n            />\n          </Spin>\n          <Typography.Text>Prices updated daily</Typography.Text>\n        </div>\n      </Layout.Content>\n    </Layout>\n  );\n};\n","import 'antd/dist/antd.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}