{"version":3,"sources":["utils/rank-stocks.ts","utils/size.ts","utils/get-sector-colors.ts","types/stock.ts","utils/animation.ts","utils/normalize.ts","utils/hooks/use-fetch-stocks.ts","utils/hooks/use-fetch-data.ts","components/Logo.tsx","components/Box.tsx","components/Title.tsx","components/Text.tsx","components/Discount.tsx","components/SortBy.tsx","components/Panel.tsx","components/StarsRating.tsx","components/TradingViewChart.tsx","components/StockPanel.tsx","components/AnimatedScrollContainer.tsx","components/Settings/AnimatedProgress.tsx","components/Settings/Slider.tsx","components/Settings/Margin.tsx","components/Settings/AnimatedChart.tsx","components/Settings/ROI.tsx","components/Settings/Settings.tsx","App.tsx","index.tsx","utils/index.ts","utils/color.ts","types/index.ts","utils/round.ts"],"names":["normalize","_value","max","min","Math","ranges","worst","best","weights","ROIC","revenueGrowth","growthRate","profitMargin","FCFYield","debtToEquity","totalWeights","Object","values","reduce","m","w","computeFundamentalsScore","stats","debtToEquityScore","computeRankScores","roi","safety","stocks","filter","stock","fairPrice","discountScore","filterExtremeScores","filterExtremeStats","map","stockStats","est10thYearPrice","fairValue","Array","memo","round","computeFairPrice","currentPrice","fundamentalsScore","Size","BASE","getSectorColors","sector","Sector","BASIC_MATERIALS","default","Color","red","primary","light","COMMUNICATION_SERVICES","magenta","CONSUMER_CYCLICAL","geekblue","CONSUMER_DEFENSIVE","volcano","ENERGY","green","FINANCIAL_SERVICES","blue","HEALTHCARE","lime","INDUSTRIALS","gold","TECHNOLOGY","cyan","grey","ANIMATION_TIME","ANIMATION_CURVE","value","a","b","useFetchStocks","url","transform","waitFor","shouldExecute","useState","isLoading","data","undefined","error","state","setState","updateState","newState","useEffect","fetch","response","ok","json","status","fetchData","useFetchData","urlJoin","process","styles","logo","css","Logo","inversed","fill","white","className","viewBox","xmlns","d","fillRule","clipRule","_isObject","prop","Box","children","size","inset","style","paddingRight","right","paddingLeft","left","paddingTop","top","paddingBottom","bottom","marginRight","marginLeft","marginTop","marginBottom","Title","level","align","color","fontWeight","textAlign","Text","MEDIUM","bold","fontSize","discount","SMALL","Discount","amount","cx","moreIcon","tertiary","secondary","option","EXTRA_SMALL","SortByEnum","SortBy","onChange","placement","arrowPointAtCenter","trigger","overlayInnerStyle","padding","borderRadius","content","onClick","EllipsisOutlined","LARGE","panel","EXTRA_LARGE","hidden","dragIcon","table","row","loader","sortBy","Panel","onClickStock","onChangeSort","prevScrollOffset","useRef","timeout","showLoading","showSortBy","setShowSortBy","handleScroll","scrollOffset","current","clearTimeout","delta","abs","setTimeout","data-element","length","display","alignItems","justifyContent","height","width","description","useIsScrolling","itemCount","itemSize","onScroll","index","isScrolling","gutter","justify","span","symbol","maxWidth","overflow","textOverflow","whiteSpace","name","profile","container","stars","filled","Stars","id","x1","y1","x2","y2","gradientUnits","gradientTransform","offset","stopColor","yellow","stopOpacity","StarsRating","rating","TradingViewChart","useLayoutEffect","colors","TradingView","MediumWidget","symbols","chartOnly","locale","colorTheme","gridLineColor","trendLineColor","fontColor","underLineColor","isTransparent","autosize","container_id","initWidget","close","spinner","chart","visible","disclaimer","back","StatMapping","EPS","PE","percentages","Stats","onClickBack","LeftOutlined","keys","key","includes","BasicInfo","onClickViewAll","industry","country","title","InfoCircleFilled","cursor","Link","StockPanel","_stock","onClickClose","setStock","statsVisible","setStatsVisible","chartVisible","setChartVisible","PlusOutlined","position","zIndex","href","target","AnimatePresence","exitBeforeEnter","motion","div","transition","duration","ease","initial","x","opacity","animate","exit","scale","indicator","LoadingOutlined","spin","topVariants","y","rotateX","totalY","bottomVariants","compact","progress","AnimatedScrollContainer","active","onResetPanel","dragControls","useDragControls","scrollYOffset","useMotionValue","useTransform","handleWheelChange","e","deltaY","currentValue","get","newValue","document","addEventListener","removeEventListener","variants","drag","onDrag","_","info","body","onDragEnd","onDragStart","dataset","element","componentControls","forEach","entry","stop","dragElastic","dragConstraints","circle","background","AnimatedProgress","circumference","PI","in","stdDeviation","dx","dy","result","floodColor","in2","operator","cy","r","strokeLinecap","strokeDasharray","slider","SLIDER_WIDTH","backgroundTrack","filledTrack","orange","handle","Slider","onConfirm","canConfirm","setCanConfirm","_width","useMotionTemplate","latest","dragTransition","power","whileHover","whileTap","CheckOutlined","strokeWidth","stroke","margin","gradientText","Margin","svg","randomSequence","floor","random","AnimatedChart","setKey","window","innerWidth","OFFSET","heights","i","handleResize","pointHeight","join","ROI","settings","Settings","onChangeRoi","onChangeMargin","page","setPage","injectGlobal","app","button","App","setMargin","setRoi","activeStock","setActiveStock","setSortBy","isSettingsVisible","setIsSettingsVisible","computedStocks","sortedStocks","sort","localeCompare","ghost","fontStyle","QuestionCircleFilled","flex","minHeight","ReactDOM","render","StrictMode","getElementById","sv","Number","EPSILON"],"mappings":"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","file":"static/js/main.8f48df80.chunk.js","sourcesContent":["import { Stock, StockFromServer } from '../types';\nimport { round } from './round';\n\nfunction normalize(_value: number, max: number, min: number): number {\n  const value = Math.min(Math.max(_value, min), max);\n  return (value - min) / (max - min);\n}\n\nfunction filterExtremeStats(stocks: Array<StockFromServer>): Array<StockFromServer> {\n  return stocks.filter((stock) => stock.stats.growthRate > 0.1 && stock.stats.growthRate < 1);\n}\n\nfunction filterExtremeScores(stocks: Array<Stock>): Array<Stock> {\n  return stocks.filter((stock) => stock.fairPrice > 0 && stock.discountScore < 1.1);\n}\n\nfunction computeFairPrice(\n  roi: number,\n  safety: number,\n  stockStats: StockFromServer['stats'],\n): number {\n  const { est10thYearPrice } = stockStats;\n  const fairValue = [...Array(9)].reduce((memo) => memo / (1 + roi), est10thYearPrice);\n  return round(fairValue * safety);\n}\n\nconst ranges = {\n  debtToEquity: {\n    // Higher is worse\n    worst: 4,\n    best: 0.2,\n  },\n  revenueGrowth: {\n    worst: 0.1,\n    best: 0.5,\n  },\n  growthRate: {\n    worst: 0.1,\n    best: 0.5,\n  },\n  profitMargin: {\n    worst: 0,\n    best: 0.5,\n  },\n  FCFYield: {\n    worst: 0,\n    best: 0.5,\n  },\n  ROIC: {\n    worst: 0,\n    best: 0.3,\n  },\n};\n\nconst weights: { [x: string]: number } = {\n  ROIC: 1,\n  revenueGrowth: 2,\n  growthRate: 2,\n  profitMargin: 3,\n  FCFYield: 1,\n  debtToEquity: 1,\n};\n\nconst totalWeights = Object.values(weights).reduce((m, w) => m + w, 0);\n\nfunction computeFundamentalsScore(stats: StockFromServer['stats']): number {\n  const {\n    ROIC = (ranges.ROIC.best + ranges.ROIC.worst) / 2,\n    revenueGrowth,\n    growthRate,\n    profitMargin,\n    FCFYield = (ranges.FCFYield.best + ranges.FCFYield.worst) / 2,\n    debtToEquity = (ranges.debtToEquity.best + ranges.debtToEquity.worst) / 2,\n  } = stats;\n\n  const debtToEquityScore =\n    (1 -\n      normalize(\n        debtToEquity <= 0 ? 4 : debtToEquity,\n        ranges.debtToEquity.worst,\n        ranges.debtToEquity.best,\n      )) *\n    (weights.debtToEquity / totalWeights);\n  const ROICScore =\n    normalize(ROIC, ranges.ROIC.best, ranges.ROIC.worst) * (weights.ROIC / totalWeights);\n  const revenueGrowthScore =\n    normalize(revenueGrowth, ranges.revenueGrowth.best, ranges.revenueGrowth.worst) *\n    (weights.revenueGrowth / totalWeights);\n  const growthRateScore =\n    normalize(growthRate, ranges.growthRate.best, ranges.growthRate.worst) *\n    (weights.growthRate / totalWeights);\n  const profitMarginScore =\n    normalize(profitMargin, ranges.profitMargin.best, ranges.profitMargin.worst) *\n    (weights.profitMargin / totalWeights);\n  const FCFYieldScore =\n    normalize(FCFYield, ranges.FCFYield.best, ranges.FCFYield.worst) *\n    (weights.FCFYield / totalWeights);\n  return (\n    ROICScore +\n    revenueGrowthScore +\n    growthRateScore +\n    profitMarginScore +\n    FCFYieldScore +\n    debtToEquityScore\n  );\n}\n\nexport function computeRankScores(\n  roi: number,\n  safety: number,\n  stocks: Array<StockFromServer>,\n): Array<Stock> {\n  const computed = filterExtremeStats(stocks).map((stock) => {\n    const fairPrice = computeFairPrice(roi, safety, stock.stats);\n    return {\n      ...stock,\n      fairPrice,\n      discountScore: round(stock.stats.currentPrice / fairPrice),\n      fundamentalsScore: computeFundamentalsScore(stock.stats),\n    };\n  });\n  const filtered = filterExtremeScores(computed);\n  return filtered;\n}\n","const BASE = 14;\n\nexport enum Size {\n  EXTRA_SMALL = 4,\n  SMALL = 8,\n  MEDIUM = BASE,\n  LARGE = BASE * 2,\n  EXTRA_LARGE = BASE * 3,\n}\n","import { Sector } from '../types';\nimport { Color } from './color';\n\nexport function getSectorColors(\n  sector: Sector,\n): {\n  default: string;\n  light: string;\n} {\n  switch (sector) {\n    case Sector.BASIC_MATERIALS:\n      return {\n        default: Color.red.primary!,\n        light: Color.red[1],\n      };\n    case Sector.COMMUNICATION_SERVICES:\n      return {\n        default: Color.magenta.primary!,\n        light: Color.magenta[1],\n      };\n    case Sector.CONSUMER_CYCLICAL:\n      return {\n        default: Color.geekblue.primary!,\n        light: Color.geekblue[1],\n      };\n    case Sector.CONSUMER_DEFENSIVE:\n      return {\n        default: Color.volcano.primary!,\n        light: Color.volcano[1],\n      };\n    case Sector.ENERGY:\n      return {\n        default: Color.green.primary!,\n        light: Color.green[1],\n      };\n    case Sector.FINANCIAL_SERVICES:\n      return {\n        default: Color.blue.primary!,\n        light: Color.blue[1],\n      };\n    case Sector.HEALTHCARE:\n      return {\n        default: Color.lime.primary!,\n        light: Color.lime[1],\n      };\n    case Sector.INDUSTRIALS:\n      return {\n        default: Color.gold.primary!,\n        light: Color.gold[1],\n      };\n    case Sector.TECHNOLOGY:\n      return {\n        default: Color.cyan.primary!,\n        light: Color.cyan[1],\n      };\n    default:\n      return {\n        default: Color.grey[8],\n        light: Color.grey[4],\n      };\n  }\n}\n","export enum Sector {\n  BASIC_MATERIALS = 'Basic Materials',\n  COMMUNICATION_SERVICES = 'Communication Services',\n  CONSUMER_CYCLICAL = 'Consumer Cyclical',\n  CONSUMER_DEFENSIVE = 'Consumer Defensive',\n  ENERGY = 'Energy',\n  FINANCIAL_SERVICES = 'Financial Services',\n  HEALTHCARE = 'Healthcare',\n  INDUSTRIALS = 'Industrials',\n  TECHNOLOGY = 'Technology',\n}\n\nexport interface StockFromServer {\n  symbol: string;\n  name: string;\n  profile: {\n    country: string;\n    industry: string;\n    sector: Sector;\n  };\n  stats: {\n    revenueGrowth: number; // yoy\n    profitMargin: number;\n    EPS: number;\n    growthRate: number;\n    PE: number;\n    debtToEquity?: number;\n    FCFYield?: number;\n    ROIC?: number;\n    est10YearEPS: number;\n    est10thYearPrice: number;\n    currentPrice: number;\n    [key: string]: number | undefined;\n  };\n}\n\nexport interface Stock extends StockFromServer {\n  fairPrice: number;\n  discountScore: number;\n  fundamentalsScore: number;\n}\n","export const ANIMATION_TIME = '0.3s';\nexport const ANIMATION_CURVE = 'cubic-bezier(0.86, 0, 0.07, 1)';\n","export function normalize(value: number, max: number, min: number, a: number, b: number): number {\n  return (b - a) * ((value - min) / (max - min)) + a;\n}\n","import urlJoin from 'url-join';\n\nimport { StockFromServer } from '../../types';\nimport { useFetchData } from './use-fetch-data';\n\nexport function useFetchStocks(): {\n  isLoading: boolean;\n  stocks?: Array<StockFromServer>;\n  error: Error;\n} {\n  const { isLoading, error, data } = useFetchData<Array<StockFromServer>>(\n    urlJoin(process.env.REACT_APP_API_HOST, 'api/stocks'),\n  );\n  return {\n    isLoading,\n    error,\n    stocks: data,\n  };\n}\n","import { useEffect, useState } from 'react';\n\ninterface State<T> {\n  isLoading: boolean;\n  data?: T;\n  error?: any;\n}\n\nexport function useFetchData<T>(\n  url: string,\n  { transform, waitFor = true, shouldExecute = true }: any = {},\n) {\n  // Use single state to avoid unncessary re-renders\n  const [state, setState] = useState({\n    isLoading: true,\n    data: undefined,\n    error: undefined,\n  } as State<T>);\n  const updateState = (newState: State<T>) => setState((state) => ({ ...state, ...newState }));\n\n  useEffect(() => {\n    const fetchData = async () => {\n      updateState({ isLoading: true });\n      const response = await fetch(url);\n\n      if (response.ok) {\n        const data = await response.json();\n        updateState({ isLoading: false, data: transform != null ? transform(data) : data });\n      } else {\n        updateState({ isLoading: false, error: { status: response.status } });\n      }\n    };\n\n    if (waitFor && shouldExecute) {\n      fetchData();\n    }\n  }, [url, waitFor]);\n\n  return state;\n}\n","import { css } from '@emotion/css';\n\nimport { Color } from '../utils';\n\nconst styles = {\n  logo: css`\n    height: 100px;\n    width: 100px;\n    overflow: hidden;\n\n    > svg {\n      margin-left: -15px;\n      margin-top: -14px;\n      height: calc(100% + 27px);\n      width: calc(100% + 27px);\n    }\n  `,\n};\n\ninterface LogoProps {\n  inversed?: boolean;\n}\n\nexport const Logo = ({ inversed = true }: LogoProps) => {\n  const fill = inversed ? Color.white : Color.grey[3];\n  return (\n    <div className={styles.logo}>\n      <svg viewBox=\"0 0 129 129\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n          d=\"M39.6955 50.6542L36.3265 54.0233L45.1546 62.8514L42.5966 65.4094L33.7685 56.5812L30.3838 59.9659L28.1378 57.7198L37.4495 48.4082L39.6955 50.6542Z\"\n          fill={fill}\n        />\n        <path\n          d=\"M48.2288 37.6289L59.3029 48.7031L56.745 51.2611L52.2061 46.7222L47.792 51.1363L52.3309 55.6751L49.7729 58.2331L38.6987 47.1589L41.2567 44.601L45.546 48.8902L49.9601 44.4762L45.6708 40.1869L48.2288 37.6289Z\"\n          fill={fill}\n        />\n        <path\n          d=\"M66.9624 36.5516L69.2084 38.7976L61.4253 46.5807L50.3511 35.5066L57.9939 27.8638L60.2399 30.1098L55.1551 35.1946L57.3076 37.347L61.6748 32.9798L63.7493 35.0542L59.382 39.4215L61.7372 41.7767L66.9624 36.5516Z\"\n          fill={fill}\n        />\n        <path\n          d=\"M29.8831 93.633C29.7812 93.6184 29.5192 93.6621 29.097 93.764C28.6749 93.8659 28.1799 94.026 27.6121 94.2444C27.0444 94.4627 26.4621 94.7393 25.8652 95.0742C25.2684 95.409 24.737 95.8093 24.2712 96.2752C22.9901 97.5562 22.779 98.6262 23.6379 99.4851C23.9 99.7472 24.1838 99.9 24.4895 99.9437C24.8098 99.9728 25.1737 99.9291 25.5814 99.8127C25.989 99.6671 26.4548 99.4487 26.9789 99.1576C27.503 98.8664 28.1071 98.5243 28.7913 98.1313C29.7376 97.5926 30.6328 97.1486 31.4772 96.7992C32.307 96.4353 33.1076 96.2315 33.8792 96.1878C34.6507 96.115 35.4005 96.2242 36.1283 96.5154C36.8708 96.792 37.5987 97.2869 38.312 98.0002C39.1854 98.8737 39.7605 99.7836 40.0371 100.73C40.3137 101.647 40.3719 102.564 40.2117 103.481C40.0371 104.384 39.6877 105.272 39.1636 106.145C38.625 107.004 37.9844 107.805 37.242 108.547C36.6743 109.115 36.0483 109.654 35.3641 110.163C34.6799 110.673 33.9738 111.131 33.2459 111.539C32.5035 111.932 31.7465 112.281 30.975 112.587C30.218 112.878 29.461 113.096 28.704 113.242L27.1536 108.547C27.2846 108.562 27.6121 108.511 28.1362 108.394C28.6603 108.278 29.2572 108.089 29.9268 107.827C30.611 107.55 31.3243 107.201 32.0668 106.778C32.8092 106.356 33.4789 105.847 34.0757 105.25C35.3422 103.983 35.5897 102.964 34.8182 102.193C34.527 101.902 34.1922 101.756 33.8137 101.756C33.4352 101.756 33.0057 101.851 32.5253 102.04C32.0304 102.215 31.4845 102.469 30.8876 102.804C30.3053 103.125 29.6648 103.474 28.966 103.852C28.0343 104.347 27.1827 104.733 26.4111 105.01C25.625 105.272 24.8899 105.41 24.2057 105.425C23.536 105.425 22.8955 105.294 22.2841 105.032C21.6872 104.755 21.0976 104.326 20.5153 103.743C19.7001 102.928 19.1323 102.055 18.8121 101.123C18.4918 100.191 18.3826 99.2522 18.4845 98.306C18.5719 97.3452 18.8485 96.4135 19.3143 95.5109C19.7947 94.5938 20.4207 93.7494 21.1922 92.9779C21.7309 92.4392 22.3132 91.9588 22.9392 91.5367C23.5651 91.1145 24.1984 90.7433 24.8389 90.423C25.4795 90.1027 26.1054 89.8407 26.7169 89.6369C27.3428 89.4185 27.9324 89.2366 28.4856 89.091L29.8831 93.633Z\"\n          fill={fill}\n        />\n        <path\n          d=\"M44.3247 76.3964L39.608 81.113L51.9674 93.4724L48.3862 97.0536L36.0268 84.6942L31.2883 89.4327L28.1439 86.2883L41.1802 73.2519L44.3247 76.3964Z\"\n          fill={fill}\n        />\n        <path\n          d=\"M64.6301 81.0717C63.4801 82.2218 62.2063 83.0443 60.8088 83.5393C59.4112 84.0342 58.0137 84.2526 56.6162 84.1944C55.2041 84.1216 53.8357 83.8013 52.5109 83.2335C51.2007 82.6512 50.0434 81.8579 49.0389 80.8534C48.0199 79.8343 47.2265 78.6625 46.6588 77.3377C46.1056 75.9984 45.8144 74.63 45.7853 73.2325C45.7562 71.8058 46.0037 70.4083 46.5278 69.0399C47.0373 67.6569 47.8525 66.405 48.9734 65.284C50.1235 64.134 51.3973 63.3115 52.7948 62.8165C54.1923 62.3216 55.5971 62.1105 57.0092 62.1833C58.4213 62.256 59.7825 62.5836 61.0926 63.1659C62.4028 63.7482 63.5456 64.527 64.521 65.5024C65.54 66.5214 66.3261 67.7006 66.8793 69.0399C67.447 70.3646 67.7527 71.733 67.7964 73.1451C67.8255 74.5427 67.5853 75.9329 67.0758 77.3159C66.5663 78.6989 65.7511 79.9508 64.6301 81.0717ZM52.7293 77.2504C53.3262 77.8472 53.9958 78.3422 54.7382 78.7352C55.4661 79.1137 56.2158 79.3539 56.9874 79.4559C57.7735 79.5432 58.5523 79.4631 59.3239 79.2157C60.0954 78.9682 60.8088 78.5169 61.4639 77.8618C62.1481 77.1776 62.6066 76.4424 62.8395 75.6563C63.0725 74.8702 63.138 74.0914 63.0361 73.3198C62.9196 72.5337 62.6649 71.784 62.2718 71.0707C61.8787 70.3282 61.3911 69.6659 60.8088 69.0836C60.2119 68.4867 59.5495 67.999 58.8216 67.6205C58.0792 67.2275 57.3222 66.9945 56.5507 66.9218C55.7646 66.8344 54.993 66.9218 54.236 67.1838C53.479 67.4167 52.773 67.8607 52.1179 68.5158C51.4337 69.2 50.9751 69.9352 50.7422 70.7213C50.5093 71.4783 50.4365 72.2498 50.5238 73.0359C50.6257 73.8075 50.8732 74.5645 51.2663 75.3069C51.6593 76.0203 52.147 76.6681 52.7293 77.2504Z\"\n          fill={fill}\n        />\n        <path\n          d=\"M65.5203 64.1537C64.5886 63.222 63.8389 62.1229 63.2712 60.8564C62.6889 59.5753 62.3686 58.236 62.3104 56.8385C62.2521 55.4409 62.4778 54.0361 62.9873 52.624C63.4968 51.2119 64.363 49.8945 65.5858 48.6716C67.0416 47.2159 68.6138 46.2696 70.3025 45.8329C72.0057 45.3816 73.6216 45.3962 75.1502 45.8766L74.3204 50.5496C73.7381 50.3167 73.1776 50.2075 72.639 50.222C72.1003 50.2075 71.5908 50.2803 71.1104 50.4404C70.6155 50.586 70.1715 50.7971 69.7784 51.0737C69.3708 51.3357 69.0069 51.6268 68.6866 51.9471C68.0024 52.6313 67.5438 53.3665 67.3109 54.1526C67.078 54.9387 67.0125 55.7175 67.1144 56.4891C67.2163 57.2606 67.4637 58.0031 67.8568 58.7164C68.2499 59.4297 68.7303 60.0702 69.298 60.638C69.9094 61.2494 70.5936 61.7444 71.3506 62.1229C72.1076 62.5014 72.8792 62.7343 73.6653 62.8216C74.466 62.8944 75.2448 62.8144 76.0018 62.5814C76.7588 62.3194 77.4503 61.8754 78.0762 61.2494C78.3965 60.9291 78.6877 60.5652 78.9497 60.1576C79.2117 59.7209 79.4155 59.2696 79.5611 58.8037C79.7067 58.3088 79.7795 57.7993 79.7795 57.2752C79.7649 56.7366 79.6412 56.1906 79.4083 55.6375L84.0594 54.4365C84.3942 55.2371 84.5544 56.096 84.5398 57.0131C84.5398 57.9157 84.3942 58.8183 84.1031 59.7209C83.8119 60.6234 83.4116 61.4896 82.9021 62.3194C82.3926 63.1492 81.8175 63.8843 81.177 64.5249C80.0561 65.6458 78.7968 66.4538 77.3993 66.9487C76.0018 67.4146 74.5824 67.6111 73.1412 67.5383C71.7146 67.4509 70.3316 67.1161 68.9923 66.5338C67.6676 65.937 66.5102 65.1436 65.5203 64.1537Z\"\n          fill={fill}\n        />\n        <path\n          d=\"M89.3324 56.1075L73.8285 40.6036L77.4097 37.0224L84.0917 43.7044L83.0872 31.345L87.1051 27.3271L88.2187 40.0577L103.002 42.4379L98.9186 46.5213L88.2842 44.6652L88.3497 47.9625L92.9136 52.5263L89.3324 56.1075Z\"\n          fill={fill}\n        />\n        <path\n          d=\"M102.493 21.0227C102.392 21.0081 102.129 21.0518 101.707 21.1537C101.285 21.2556 100.79 21.4157 100.222 21.6341C99.6547 21.8525 99.0724 22.129 98.4755 22.4639C97.8787 22.7987 97.3473 23.199 96.8815 23.6649C95.6004 24.9459 95.3893 26.0159 96.2482 26.8748C96.5103 27.1369 96.7941 27.2897 97.0998 27.3334C97.4201 27.3625 97.784 27.3188 98.1917 27.2024C98.5993 27.0568 99.0651 26.8384 99.5892 26.5473C100.113 26.2561 100.717 25.914 101.402 25.521C102.348 24.9823 103.243 24.5383 104.087 24.189C104.917 23.825 105.718 23.6212 106.489 23.5775C107.261 23.5047 108.011 23.6139 108.739 23.9051C109.481 24.1817 110.209 24.6766 110.922 25.39C111.796 26.2634 112.371 27.1733 112.647 28.1195C112.924 29.0366 112.982 29.9538 112.822 30.8709C112.647 31.7735 112.298 32.6615 111.774 33.5349C111.235 34.3938 110.595 35.1945 109.852 35.9369C109.285 36.5047 108.659 37.0433 107.974 37.5528C107.29 38.0623 106.584 38.5209 105.856 38.9285C105.114 39.3216 104.357 39.671 103.585 39.9767C102.828 40.2678 102.071 40.4862 101.314 40.6318L99.7639 35.9369C99.8949 35.9515 100.222 35.9005 100.747 35.7841C101.271 35.6676 101.867 35.4784 102.537 35.2163C103.221 34.9397 103.935 34.5904 104.677 34.1682C105.42 33.746 106.089 33.2365 106.686 32.6396C107.953 31.3731 108.2 30.3541 107.428 29.5825C107.137 29.2914 106.802 29.1458 106.424 29.1458C106.045 29.1458 105.616 29.2404 105.136 29.4297C104.641 29.6044 104.095 29.8591 103.498 30.194C102.916 30.5142 102.275 30.8636 101.576 31.2421C100.645 31.7371 99.793 32.1228 99.0214 32.3994C98.2353 32.6615 97.5002 32.7998 96.816 32.8143C96.1463 32.8143 95.5058 32.6833 94.8944 32.4213C94.2975 32.1447 93.7079 31.7152 93.1256 31.1329C92.3104 30.3177 91.7426 29.4442 91.4224 28.5126C91.1021 27.5809 90.9929 26.6419 91.0948 25.6957C91.1822 24.7349 91.4588 23.8032 91.9246 22.9006C92.405 21.9835 93.031 21.1391 93.8025 20.3676C94.3412 19.8289 94.9235 19.3485 95.5494 18.9264C96.1754 18.5042 96.8087 18.133 97.4492 17.8127C98.0897 17.4925 98.7157 17.2304 99.3271 17.0266C99.9531 16.8082 100.543 16.6263 101.096 16.4807L102.493 21.0227Z\"\n          fill={fill}\n        />\n        <path\n          d=\"M61.7787 110.177L50.7045 99.1026L54.8378 94.9693C55.7529 94.0543 56.6991 93.3992 57.6765 93.004C58.654 92.6089 59.621 92.4321 60.5777 92.4737C61.5447 92.5049 62.4806 92.7441 63.3852 93.1912C64.2899 93.6175 65.1217 94.2102 65.8808 94.9693C66.7231 95.8116 67.3573 96.7058 67.7837 97.6521C68.1996 98.5879 68.4076 99.5446 68.4076 100.522C68.4076 101.479 68.1996 102.435 67.7837 103.392C67.3677 104.328 66.7438 105.212 65.912 106.043L61.7787 110.177ZM63.276 97.5741C62.7873 97.0854 62.2778 96.711 61.7475 96.4511C61.2172 96.1703 60.6816 96.0091 60.1409 95.9675C59.6002 95.9259 59.0699 96.0091 58.55 96.2171C58.0301 96.4251 57.5414 96.7578 57.0838 97.2153L55.5085 98.7907L62.0906 105.373L63.666 103.797C64.1339 103.33 64.4666 102.83 64.6642 102.3C64.8618 101.77 64.9345 101.239 64.8826 100.709C64.8306 100.158 64.6694 99.6225 64.399 99.1026C64.1287 98.5619 63.7543 98.0524 63.276 97.5741Z\"\n          fill={fill}\n        />\n        <path\n          d=\"M78.4807 88.9827L80.7267 91.2287L72.9436 99.0118L61.8694 87.9377L69.5122 80.2949L71.7582 82.541L66.6735 87.6257L68.8259 89.7782L73.1932 85.4109L75.2676 87.4853L70.9004 91.8526L73.2556 94.2078L78.4807 88.9827Z\"\n          fill={fill}\n        />\n        <path\n          d=\"M82.2808 89.6747L71.2066 78.6005L75.9326 73.8745C76.4629 73.3442 77.0556 72.9699 77.7107 72.7515C78.3762 72.5227 79.0417 72.4292 79.7072 72.4707C80.3831 72.5019 81.033 72.6527 81.6569 72.9231C82.2912 73.183 82.8371 73.5418 83.2946 73.9993C83.7833 74.488 84.1628 75.0443 84.4332 75.6682C84.714 76.2817 84.8751 76.9212 84.9167 77.5867C84.9687 78.2418 84.8803 78.8917 84.6516 79.5364C84.4228 80.1811 84.0433 80.7686 83.5129 81.2989L81.2669 83.5449L84.8387 87.1167L82.2808 89.6747ZM79.0365 81.3145L81.1265 79.2244C81.4281 78.9229 81.5581 78.533 81.5165 78.0546C81.4749 77.5763 81.2045 77.0876 80.7054 76.5885C80.4455 76.3285 80.1855 76.1413 79.9255 76.027C79.676 75.9022 79.4316 75.8346 79.1925 75.8242C78.9533 75.8138 78.7349 75.8554 78.5374 75.949C78.3294 76.0322 78.1526 76.1465 78.0071 76.2921L76.0106 78.2886L79.0365 81.3145Z\"\n          fill={fill}\n        />\n        <path\n          d=\"M96.9431 75.1996C96.1216 76.021 95.2118 76.6085 94.2135 76.9621C93.2153 77.3156 92.217 77.4716 91.2188 77.43C90.2102 77.378 89.2327 77.1492 88.2865 76.7437C87.3507 76.3278 86.524 75.7611 85.8065 75.0436C85.0786 74.3157 84.5119 73.4787 84.1064 72.5324C83.7113 71.5758 83.5033 70.5983 83.4825 69.6001C83.4617 68.5811 83.6385 67.5828 84.0128 66.6054C84.3767 65.6175 84.959 64.7233 85.7597 63.9226C86.5812 63.1012 87.491 62.5137 88.4893 62.1601C89.4875 61.8066 90.4909 61.6558 91.4996 61.7078C92.5082 61.7598 93.4804 61.9937 94.4163 62.4097C95.3521 62.8256 96.1684 63.3819 96.8651 64.0786C97.593 64.8065 98.1545 65.6487 98.5496 66.6054C98.9551 67.5516 99.1735 68.5291 99.2047 69.5377C99.2255 70.5359 99.0539 71.529 98.69 72.5168C98.326 73.5046 97.7437 74.3989 96.9431 75.1996ZM88.4425 72.47C88.8688 72.8963 89.3471 73.2499 89.8774 73.5306C90.3973 73.801 90.9329 73.9726 91.484 74.0454C92.0455 74.1077 92.6018 74.0506 93.1529 73.8738C93.704 73.697 94.2135 73.3747 94.6814 72.9067C95.1702 72.418 95.4977 71.8929 95.6641 71.3314C95.8305 70.7699 95.8772 70.2136 95.8045 69.6625C95.7213 69.101 95.5393 68.5655 95.2585 68.0559C94.9778 67.5256 94.6295 67.0525 94.2135 66.6366C93.7872 66.2102 93.3141 65.8619 92.7941 65.5916C92.2638 65.3108 91.7231 65.1444 91.172 65.0924C90.6105 65.03 90.0594 65.0924 89.5187 65.2796C88.978 65.446 88.4737 65.7631 88.0057 66.231C87.517 66.7198 87.1895 67.2449 87.0231 67.8064C86.8567 68.3471 86.8047 68.8982 86.8671 69.4597C86.9399 70.0108 87.1167 70.5515 87.3974 71.0818C87.6782 71.5914 88.0265 72.0541 88.4425 72.47Z\"\n          fill={fill}\n        />\n        <path\n          d=\"M102.941 51.3579L99.5722 54.727L108.4 63.5551L105.842 66.1131L97.0142 57.2849L93.6296 60.6696L91.3836 58.4236L100.695 49.1119L102.941 51.3579Z\"\n          fill={fill}\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M112.936 17.5026H18.2863V112.152H112.936V17.5026ZM15.0596 14.2759V115.379H116.162V14.2759H15.0596Z\"\n          fill={fill}\n        />\n      </svg>\n    </div>\n  );\n};\n","import { CSSProperties, ReactNode } from 'react';\n\nfunction _isObject(prop: number | Object): prop is BoxObject {\n  return typeof prop !== 'number';\n}\n\ntype BoxObject = {\n  left?: number;\n  right?: number;\n  top?: number;\n  bottom?: number;\n};\n\ninterface BoxProps {\n  children?: ReactNode;\n  size: number | BoxObject;\n  inset?: boolean;\n  style?: CSSProperties;\n}\n\nexport const Box = ({ children, size, inset, style = {} }: BoxProps) => {\n  const styles =\n    inset === true\n      ? {\n          paddingRight: _isObject(size) ? size.right : size,\n          paddingLeft: _isObject(size) ? size.left : size,\n          paddingTop: _isObject(size) ? size.top : size,\n          paddingBottom: _isObject(size) ? size.bottom : size,\n        }\n      : {\n          marginRight: _isObject(size) ? size.right : size,\n          marginLeft: _isObject(size) ? size.left : size,\n          marginTop: _isObject(size) ? size.top : size,\n          marginBottom: _isObject(size) ? size.bottom : size,\n        };\n\n  return <div style={{ ...styles, ...style }}>{children}</div>;\n};\n","import { Typography } from 'antd';\nimport { ReactNode } from 'react';\n\nimport { Color } from '../utils';\n\ninterface TitleProps {\n  level: 1 | 2 | 3 | 4 | 5;\n  children: ReactNode;\n  align?: 'center';\n  inversed?: boolean;\n}\n\nexport const Title = ({ level, children, align, inversed = true }: TitleProps) => {\n  return (\n    <Typography.Title\n      level={level}\n      style={{\n        color: inversed ? Color.white : Color.grey[9],\n        fontWeight: 500,\n        textAlign: align,\n      }}>\n      {children}\n    </Typography.Title>\n  );\n};\n","import { Typography } from 'antd';\nimport { ReactNode } from 'react';\n\nimport { Color, Size } from '../utils';\n\ninterface TextProps {\n  children: ReactNode;\n  size?: Size;\n  color?: string;\n  bold?: boolean;\n  light?: boolean;\n}\n\nexport const Text = ({\n  size = Size.MEDIUM,\n  children,\n  color = Color.primary,\n  bold,\n  light,\n}: TextProps) => {\n  return (\n    <Typography.Text style={{ fontSize: size, color, fontWeight: bold ? 800 : light ? 600 : 700 }}>\n      {children}\n    </Typography.Text>\n  );\n};\n","import { css, cx } from '@emotion/css';\n\nimport { Color, Size } from '../utils';\nimport { Text } from './Text';\n\nconst styles = {\n  discount: css`\n    position: relative;\n    width: 66px;\n    height: 36px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: ${Size.SMALL}px;\n    text-align: center;\n    background: linear-gradient(\n      73deg,\n      ${Color.lime.primary},\n      15.54%,\n      ${Color.green.primary} 69.69%\n    );\n    box-shadow: 0px 4px 8px rgba(82, 196, 26, 0.4);\n    z-index: 1;\n\n    &::before {\n      content: ' ';\n      position: absolute;\n      top: 50%;\n      left: 0;\n      width: 100%;\n      height: 20px;\n      filter: blur(30px);\n      opacity: 0.7;\n      background: ${Color.green.primary};\n      z-index: 0;\n    }\n  `,\n  red: css`\n    background: linear-gradient(\n      73deg,\n      ${Color.volcano.primary},\n      15.54%,\n      ${Color.red.primary} 69.69%\n    );\n    box-shadow: 0px 4px 8px rgba(245, 34, 45, 0.4);\n\n    &::before {\n      background: ${Color.red.primary};\n    }\n  `,\n};\n\ninterface DiscountProps {\n  amount: number;\n}\n\nexport const Discount = ({ amount }: DiscountProps) => {\n  return (\n    <div className={cx(styles.discount, { [styles.red]: amount < 0 })}>\n      <Text bold size={amount < 0 ? 10 : 18} color={Color.white}>\n        {amount < 0 ? 'No discount' : `-${amount}%`}\n      </Text>\n    </div>\n  );\n};\n","import { EllipsisOutlined } from '@ant-design/icons';\nimport { css } from '@emotion/css';\nimport { Popover } from 'antd';\n\nimport { Color, Size, ValueOf } from '../utils';\nimport { Box } from './Box';\nimport { Text } from './Text';\n\nconst styles = {\n  moreIcon: css`\n    color: ${Color.tertiary};\n\n    path {\n      stroke: ${Color.tertiary};\n      stroke-width: 70;\n    }\n\n    &:hover {\n      cursor: pointer;\n      color: ${Color.secondary};\n\n      path {\n        stroke: ${Color.secondary};\n      }\n    }\n  `,\n  option: css`\n    border-radius: ${Size.EXTRA_SMALL}px;\n\n    &:hover {\n      cursor: pointer;\n      background: ${Color.grey[2]};\n    }\n  `,\n};\n\nexport const SortByEnum = {\n  ALPHABETICAL: 'ALPHABETICAL',\n  DISCOUNT: 'DISCOUNT',\n  FUNDAMENTALS: 'FUNDAMENTALS',\n};\n\ninterface SortByProps {\n  onChange: (sort: ValueOf<typeof SortByEnum>) => void;\n}\n\nexport const SortBy = ({ onChange }: SortByProps) => {\n  return (\n    <Popover\n      placement=\"bottomRight\"\n      arrowPointAtCenter\n      trigger=\"click\"\n      overlayInnerStyle={{\n        color: Color.primary,\n        padding: 0,\n        borderRadius: Size.SMALL,\n      }}\n      content={\n        <div>\n          <Box size={{ bottom: Size.SMALL, left: Size.MEDIUM, right: Size.MEDIUM }}>\n            <Text color={Color.secondary}>Sort by</Text>\n          </Box>\n          <div onClick={() => onChange(SortByEnum.ALPHABETICAL)} className={styles.option}>\n            <Box\n              inset\n              size={{\n                right: Size.MEDIUM,\n                left: Size.MEDIUM,\n                bottom: Size.EXTRA_SMALL,\n                top: Size.EXTRA_SMALL,\n              }}>\n              <Text light>Alphabetical Order</Text>\n            </Box>\n          </div>\n          <div onClick={() => onChange(SortByEnum.DISCOUNT)} className={styles.option}>\n            <Box\n              inset\n              size={{\n                right: Size.MEDIUM,\n                left: Size.MEDIUM,\n                bottom: Size.EXTRA_SMALL,\n                top: Size.EXTRA_SMALL,\n              }}>\n              <Text light>Largest disconut</Text>\n            </Box>\n          </div>\n          <div onClick={() => onChange(SortByEnum.FUNDAMENTALS)} className={styles.option}>\n            <Box\n              inset\n              size={{\n                right: Size.MEDIUM,\n                left: Size.MEDIUM,\n                bottom: Size.EXTRA_SMALL,\n                top: Size.EXTRA_SMALL,\n              }}>\n              <Text light>Fundamentals Score</Text>\n            </Box>\n          </div>\n        </div>\n      }>\n      <EllipsisOutlined className={styles.moreIcon} style={{ fontSize: Size.LARGE }} />\n    </Popover>\n  );\n};\n","import { css, cx } from '@emotion/css';\nimport { Col, Empty, Row } from 'antd';\nimport { CSSProperties, Fragment, useRef, useState } from 'react';\nimport AutoSizer from 'react-virtualized-auto-sizer';\nimport { FixedSizeList as List } from 'react-window';\n\nimport { Stock } from '../types';\nimport {\n  ANIMATION_CURVE,\n  ANIMATION_TIME,\n  Color,\n  Size,\n  ValueOf,\n  getSectorColors,\n  round,\n} from '../utils';\nimport { Box } from './Box';\nimport { Discount } from './Discount';\nimport { SortBy, SortByEnum } from './SortBy';\nimport { Text } from './Text';\n\nconst styles = {\n  panel: css`\n    position: relative;\n    border-radius: ${Size.EXTRA_LARGE}px;\n    border-bottom-right-radius: 0;\n    border-bottom-left-radius: 0;\n    background: ${Color.white};\n    width: 100%;\n    height: 100%;\n    overflow: auto;\n\n    scrollbar-width: none; /* Firefox */\n    -ms-overflow-style: none; /* Internet Explorer 10+ */\n\n    &::-webkit-scrollbar {\n      /* WebKit */\n      width: 0;\n      height: 0;\n    }\n\n    &::after {\n      content: ' ';\n      position: fixed;\n      border-radius: ${Size.EXTRA_LARGE}px;\n      border-bottom-right-radius: 0;\n      border-bottom-left-radius: 0;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background: ${Color.white};\n      opacity: 0;\n      pointer-events: none;\n      z-index: 1;\n      transition: all ${ANIMATION_TIME} ${ANIMATION_TIME} ${ANIMATION_CURVE};\n    }\n  `,\n  hidden: css`\n    pointer-events: none;\n\n    &::after {\n      opacity: 0.6;\n      pointer-events: auto;\n    }\n  `,\n  dragIcon: css`\n    position: absolute;\n    top: ${Size.MEDIUM}px;\n    left: 50%;\n    transform: translateX(-50%);\n    width: 80px;\n    height: 5px;\n    border-radius: 10px;\n    background: ${Color.tertiary};\n    z-index: 2;\n    pointer-events: all !important;\n\n    &::after {\n      content: ' ';\n      position: absolute;\n      left: -20px;\n      top: -20px;\n      width: 120px;\n      height: 45px;\n    }\n\n    &:hover {\n      cursor: grab;\n    }\n  `,\n\n  table: css`\n    padding-bottom: ${Size.EXTRA_LARGE * 3}px;\n  `,\n  row: css`\n    white-space: nowrap;\n    transition: all 0.1s ease-in-out;\n    width: calc(100% - ${Size.EXTRA_LARGE * 2}px);\n\n    &:hover {\n      cursor: pointer;\n      background: ${Color.grey[2]};\n      box-shadow: 0px 0px 0px 10px ${Color.grey[2]};\n      border-radius: ${Size.EXTRA_SMALL}px;\n    }\n  `,\n  loader: css`\n    height: 40px;\n    width: 100%;\n    border-radius: ${Size.SMALL}px;\n    background: ${Color.grey[2]};\n  `,\n  sortBy: css`\n    position: absolute;\n    top: ${Size.LARGE}px;\n    right: ${Size.EXTRA_LARGE}px;\n    z-index: 9;\n  `,\n};\n\ninterface PanelProps {\n  stocks: Array<Stock>;\n  onClickStock: (stock: Stock) => void;\n  hidden: boolean;\n  onChangeSort: (sort: ValueOf<typeof SortByEnum>) => void;\n}\n\nexport const Panel = ({ stocks, onClickStock, hidden, onChangeSort }: PanelProps) => {\n  const prevScrollOffset = useRef<number>(0);\n  const timeout = useRef<NodeJS.Timeout>();\n  const showLoading = useRef(false);\n  const [showSortBy, setShowSortBy] = useState(true);\n\n  const handleScroll = ({ scrollOffset }: { scrollOffset: number }) => {\n    if (timeout.current != null) {\n      clearTimeout(timeout.current);\n    }\n\n    if (scrollOffset > 50 && showSortBy) {\n      setShowSortBy(false);\n    } else if (scrollOffset < 50 && !showSortBy) {\n      setShowSortBy(true);\n    }\n\n    const delta = Math.abs(prevScrollOffset.current - scrollOffset);\n    prevScrollOffset.current = scrollOffset;\n    if (delta > 400) {\n      showLoading.current = true;\n    }\n\n    timeout.current = setTimeout(function () {\n      showLoading.current = false;\n    }, 500);\n  };\n\n  return (\n    <Fragment>\n      <div className={styles.dragIcon} data-element=\"handle\" />\n      {showSortBy ? (\n        <div className={styles.sortBy}>\n          <SortBy onChange={onChangeSort} />\n        </div>\n      ) : null}\n      <div className={cx(styles.panel, { [styles.hidden]: hidden })}>\n        {stocks.length === 0 ? (\n          <Box\n            size={{ top: Size.LARGE }}\n            style={{\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              height: '50%',\n              width: '100%',\n            }}>\n            <Empty\n              description={\n                <Text color={Color.secondary} light>\n                  No stocks match your profile\n                </Text>\n              }\n            />\n          </Box>\n        ) : (\n          <AutoSizer>\n            {({ height, width }) => (\n              <List\n                useIsScrolling\n                className={styles.table}\n                height={height - (60 + Size.MEDIUM) * 4}\n                itemCount={stocks.length}\n                itemSize={60 + Size.MEDIUM * 2}\n                onScroll={handleScroll}\n                width={width}>\n                {({\n                  index,\n                  style,\n                  isScrolling,\n                }: {\n                  index: number;\n                  style: CSSProperties;\n                  isScrolling?: boolean;\n                }) => {\n                  const stock = stocks[index];\n                  return (\n                    <Row\n                      style={{\n                        ...style,\n                        width: (style.width as number) - Size.EXTRA_LARGE,\n                        left: (style.left as number) + Size.EXTRA_LARGE,\n                        top: (style.top as number) + Size.EXTRA_LARGE * 2,\n                        height: (style.height as number) - Size.LARGE,\n                        marginLeft: 0,\n                        marginRight: 0,\n                      }}\n                      onClick={() => onClickStock(stock)}\n                      className={styles.row}\n                      gutter={Size.MEDIUM}\n                      key={stock.symbol}\n                      align=\"middle\"\n                      justify=\"space-between\">\n                      {isScrolling && showLoading.current ? (\n                        <Fragment>\n                          <Col span={3}>\n                            <Text bold size={Size.LARGE}>\n                              {stock.symbol}\n                            </Text>\n                          </Col>\n                          <Col span={21}>\n                            <div className={styles.loader} />\n                          </Col>\n                        </Fragment>\n                      ) : (\n                        <Fragment>\n                          <Col span={3}>\n                            <Text bold size={Size.LARGE}>\n                              {stock.symbol}\n                            </Text>\n                          </Col>\n                          <Col\n                            span={6}\n                            style={{\n                              maxWidth: 200,\n                              overflow: 'hidden',\n                              textOverflow: 'ellipsis',\n                              whiteSpace: 'nowrap',\n                              color: Color.tertiary,\n                            }}>\n                            <Text color={Color.tertiary}>{stock.name}</Text>\n                          </Col>\n                          <Col span={5}>\n                            <Text color={getSectorColors(stock.profile.sector).default}>\n                              {stock.profile.sector}\n                            </Text>\n                          </Col>\n                          <Col span={4} style={{ textAlign: 'right' }}>\n                            <Text color={Color.tertiary}>\n                              Valued at &nbsp;<Text bold>${stock.fairPrice}</Text>\n                            </Text>\n                          </Col>\n                          <Col span={4} style={{ textAlign: 'right' }}>\n                            <Text bold size={Size.LARGE}>\n                              ${round(stock.stats.currentPrice)}\n                            </Text>\n                          </Col>\n                          <Col span={2}>\n                            <Discount\n                              amount={Math.round(\n                                (1 - stock.stats.currentPrice / stock.fairPrice) * 100,\n                              )}\n                            />\n                          </Col>\n                        </Fragment>\n                      )}\n                    </Row>\n                  );\n                }}\n              </List>\n            )}\n          </AutoSizer>\n        )}\n      </div>\n    </Fragment>\n  );\n};\n","import { css, cx } from '@emotion/css';\n\nimport { Color } from '../utils';\n\nconst WIDTH = 180;\n\nconst styles = {\n  container: css`\n    position: relative;\n  `,\n  stars: css`\n    width: ${WIDTH}px;\n\n    svg {\n      fill: ${Color.tertiary};\n    }\n  `,\n  filled: css`\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: 1;\n\n    svg {\n      fill: url(#gradient);\n      filter: drop-shadow(0px 2px 2px rgba(250, 173, 20, 0.4));\n    }\n\n    &::before {\n      content: ' ';\n      position: absolute;\n      top: 100%;\n      left: 0;\n      width: 100%;\n      height: 10px;\n      filter: blur(20px);\n      opacity: 0.5;\n      background: ${Color.gold.primary};\n      z-index: 0;\n    }\n  `,\n};\n\ninterface StarsProps {\n  width?: number;\n}\n\nconst Stars = ({ width = 1 }: StarsProps) => {\n  return (\n    <svg\n      width=\"100%\"\n      height=\"100%\"\n      viewBox={`0 0 ${width * WIDTH} 29`}\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\">\n      <linearGradient\n        id=\"gradient\"\n        x1=\"0%\"\n        y1=\"0%\"\n        x2=\"35%\"\n        y2=\"100%\"\n        gradientUnits=\"userSpaceOnUse\"\n        gradientTransform=\"rotate(266)\">\n        <stop offset=\"0%\" style={{ stopColor: Color.yellow.primary, stopOpacity: 1 }} />\n        <stop offset=\"100%\" style={{ stopColor: Color.gold.primary, stopOpacity: 1 }} />\n      </linearGradient>\n      <path d=\"M28.2302 10.3723L19.3151 9.01053L15.3192 0.499026C15.0207 -0.136557 13.9779 -0.136557 13.6795 0.499026L9.68473 9.01053L0.769645 10.3723C0.0373945 10.4847 -0.255022 11.3752 0.258519 11.9009L6.73519 18.5394L5.20423 27.9246C5.08219 28.6701 5.87848 29.2296 6.53702 28.8634L14.4999 24.4627L22.4629 28.8647C23.1154 29.2272 23.9189 28.6786 23.7956 27.9258L22.2647 18.5407L28.7414 11.9021C29.2549 11.3752 28.9613 10.4847 28.2302 10.3723V10.3723Z\" />\n      <path d=\"M65.2302 10.3723L56.3151 9.01053L52.3192 0.499026C52.0207 -0.136557 50.9779 -0.136557 50.6795 0.499026L46.6847 9.01053L37.7696 10.3723C37.0374 10.4847 36.745 11.3752 37.2585 11.9009L43.7352 18.5394L42.2042 27.9246C42.0822 28.6701 42.8785 29.2296 43.537 28.8634L51.4999 24.4627L59.4629 28.8647C60.1154 29.2272 60.9189 28.6786 60.7956 27.9258L59.2647 18.5407L65.7414 11.9021C66.2549 11.3752 65.9613 10.4847 65.2302 10.3723V10.3723Z\" />\n      <path d=\"M102.23 10.3723L93.3151 9.01053L89.3192 0.499026C89.0207 -0.136557 87.9779 -0.136557 87.6795 0.499026L83.6847 9.01053L74.7696 10.3723C74.0374 10.4847 73.745 11.3752 74.2585 11.9009L80.7352 18.5394L79.2042 27.9246C79.0822 28.6701 79.8785 29.2296 80.537 28.8634L88.4999 24.4627L96.4629 28.8647C97.1154 29.2272 97.9189 28.6786 97.7956 27.9258L96.2647 18.5407L102.741 11.9021C103.255 11.3752 102.961 10.4847 102.23 10.3723V10.3723Z\" />\n      <path d=\"M139.23 10.3723L130.315 9.01053L126.319 0.499026C126.021 -0.136557 124.978 -0.136557 124.679 0.499026L120.685 9.01053L111.77 10.3723C111.037 10.4847 110.745 11.3752 111.259 11.9009L117.735 18.5394L116.204 27.9246C116.082 28.6701 116.878 29.2296 117.537 28.8634L125.5 24.4627L133.463 28.8647C134.115 29.2272 134.919 28.6786 134.796 27.9258L133.265 18.5407L139.741 11.9021C140.255 11.3752 139.961 10.4847 139.23 10.3723V10.3723Z\" />\n      <path d=\"M176.23 10.3723L167.315 9.01053L163.319 0.499026C163.021 -0.136557 161.978 -0.136557 161.679 0.499026L157.685 9.01053L148.77 10.3723C148.037 10.4847 147.745 11.3752 148.259 11.9009L154.735 18.5394L153.204 27.9246C153.082 28.6701 153.878 29.2296 154.537 28.8634L162.5 24.4627L170.463 28.8647C171.115 29.2272 171.919 28.6786 171.796 27.9258L170.265 18.5407L176.741 11.9021C177.255 11.3752 176.961 10.4847 176.23 10.3723V10.3723Z\" />\n    </svg>\n  );\n};\n\ninterface StarsRatingProps {\n  rating: number;\n}\n\nexport const StarsRating = ({ rating }: StarsRatingProps) => {\n  return (\n    <div className={styles.container}>\n      <div className={styles.stars}>\n        <Stars />\n      </div>\n      <div className={cx(styles.stars, styles.filled)} style={{ width: WIDTH * rating }}>\n        <Stars width={rating} />\n      </div>\n    </div>\n  );\n};\n","import { useLayoutEffect } from 'react';\n\nimport { Stock } from '../types';\nimport { getSectorColors } from '../utils';\n\ninterface TradingViewChartProps {\n  symbol: Stock['symbol'];\n  sector: Stock['profile']['sector'];\n}\n\nexport const TradingViewChart = ({ symbol, sector }: TradingViewChartProps) => {\n  const initWidget = () => {\n    const colors = getSectorColors(sector);\n\n    new TradingView.MediumWidget({\n      symbols: [[' ', symbol]],\n      chartOnly: true,\n      width: '100%',\n      height: '100%',\n      locale: 'en',\n      colorTheme: 'light',\n      gridLineColor: 'rgba(0, 0, 0, 0)',\n      trendLineColor: colors.default,\n      fontColor: 'rgba(0, 0, 0, 0)',\n      underLineColor: colors.light,\n      isTransparent: true,\n      autosize: true,\n      container_id: 'tradingview-container',\n    });\n  };\n\n  useLayoutEffect(() => {\n    initWidget();\n  }, []);\n\n  return (\n    <div className=\"tradingview-widget-container\">\n      <div id=\"tradingview-container\" />\n    </div>\n  );\n};\n","import { InfoCircleFilled, LeftOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\nimport { css, cx } from '@emotion/css';\nimport { Col, Row, Spin, Tooltip, Typography } from 'antd';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport { Fragment, useEffect, useState } from 'react';\n\nimport { Stock } from '../types';\nimport { ANIMATION_CURVE, ANIMATION_TIME, Color, Size, getSectorColors, round } from '../utils';\nimport { Box } from './Box';\nimport { StarsRating } from './StarsRating';\nimport { Text } from './Text';\nimport { TradingViewChart } from './TradingViewChart';\n\nconst styles = {\n  panel: css`\n    position: relative;\n    height: 100%;\n    padding: ${Size.EXTRA_LARGE}px calc(${Size.EXTRA_LARGE}px + ${Size.MEDIUM}px);\n    border-radius: ${Size.EXTRA_LARGE}px;\n    background: ${Color.white};\n    width: 100%;\n    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.15), 0px 50px 20px -34px rgba(0, 0, 0, 0.08);\n    overflow: hidden;\n  `,\n  close: css`\n    position: absolute;\n    top: ${Size.LARGE}px;\n    right: ${Size.LARGE}px;\n    font-size: ${Size.LARGE}px;\n    transform: rotate(45deg);\n    display: flex;\n    color: ${Color.tertiary};\n\n    &:hover {\n      cursor: pointer;\n      color: ${Color.secondary};\n    }\n  `,\n  spinner: css`\n    position: absolute;\n    bottom: ${Size.LARGE}px;\n    left: 50%;\n    transform: translateX(-50%);\n  `,\n  chart: css`\n    position: absolute;\n    bottom: 0;\n    left: -${Size.EXTRA_LARGE}px;\n    height: 170px;\n    width: calc(100% + ${Size.EXTRA_LARGE}px * 2);\n    pointer-events: none;\n    z-index: 0;\n    opacity: 0;\n    transform-origin: bottom;\n    transform: scaleY(0.5);\n    transition: all ${ANIMATION_TIME} ${ANIMATION_CURVE};\n\n    &::after {\n      content: ' ';\n      position: absolute;\n      height: 40px;\n      width: 200px;\n      top: ${Size.EXTRA_SMALL}px;\n      left: ${Size.EXTRA_LARGE}px;\n      background: ${Color.white};\n    }\n  `,\n  visible: css`\n    opacity: 1;\n    transform: scaleY(1);\n  `,\n  disclaimer: css`\n    position: absolute;\n    bottom: ${Size.MEDIUM}px;\n    right: ${Size.LARGE}px;\n    z-index: 2;\n  `,\n  back: css`\n    color: ${Color.tertiary};\n\n    path {\n      stroke: ${Color.tertiary};\n      stroke-width: 70;\n    }\n\n    &:hover {\n      cursor: pointer;\n      color: ${Color.secondary};\n\n      span {\n        color: ${Color.secondary} !important;\n      }\n\n      path {\n        stroke: ${Color.secondary};\n      }\n    }\n  `,\n};\n\ntype Keys = keyof Omit<Stock['stats'], 'est10YearEPS' | 'est10thYearPrice' | 'currentPrice'>;\n\nconst StatMapping: { [key in Keys]: string } = {\n  revenueGrowth: 'Revenue Growth',\n  profitMargin: 'Profit Margins',\n  EPS: 'Earnings Per Share (EPS)',\n  growthRate: 'Growth Rate (5 years est.)',\n  PE: 'PE Ratio',\n  debtToEquity: 'Debt to Equity (D/E)', // TODO color if < 1 (good), > 2 (bad)\n  FCFYield: 'Free Cash Flow Yield',\n  ROIC: 'ROIC',\n};\n\nconst percentages = ['revenueGrowth', 'profitMargin', 'growthRate', 'FCFYield', 'ROIC'];\n\nconst Stats = ({ stats, onClickBack }: { stats: Stock['stats']; onClickBack: VoidFunction }) => {\n  return (\n    <div>\n      <div onClick={onClickBack} className={styles.back}>\n        <Row gutter={Size.EXTRA_SMALL}>\n          <Col>\n            <LeftOutlined />\n          </Col>\n          <Col>\n            <Text color={Color.tertiary} size={Size.MEDIUM}>\n              Back\n            </Text>\n          </Col>\n        </Row>\n      </div>\n      <Box size={{ top: Size.MEDIUM }}>\n        <Row gutter={[Size.EXTRA_LARGE, Size.SMALL]}>\n          {Object.keys(StatMapping).map((key) => {\n            const value = stats[key as Keys];\n            if (value == null) {\n              return undefined;\n            }\n            return (\n              <Fragment key={key}>\n                <Col span={6}>\n                  <Text color={Color.secondary}>{StatMapping[key as Keys]}</Text>\n                </Col>\n                <Col span={6} style={{ textAlign: 'right' }}>\n                  <Text>{percentages.includes(key) ? `${round(value * 100)}%` : round(value)}</Text>\n                </Col>\n              </Fragment>\n            );\n          })}\n        </Row>\n      </Box>\n    </div>\n  );\n};\n\nconst BasicInfo = ({ stock, onClickViewAll }: { stock: Stock; onClickViewAll: VoidFunction }) => {\n  return (\n    <Fragment>\n      <Text color={Color.secondary}>{stock.name}</Text>\n      <Box size={{ top: Size.LARGE }}>\n        <Row gutter={Size.LARGE}>\n          <Col span={8}>\n            <Row gutter={[Size.SMALL, Size.EXTRA_SMALL]}>\n              <Col span={6}>\n                <Text color={Color.secondary}>Sector</Text>\n              </Col>\n              <Col span={18}>\n                <Text color={getSectorColors(stock.profile.sector).default}>\n                  {stock.profile.sector}\n                </Text>\n              </Col>\n              <Col span={6}>\n                <Text color={Color.secondary}>Industry</Text>\n              </Col>\n              <Col span={18}>\n                <Text>{stock.profile.industry}</Text>\n              </Col>\n              <Col span={6}>\n                <Text color={Color.secondary}>Country</Text>\n              </Col>\n              <Col span={18}>\n                <Text>{stock.profile.country}</Text>\n              </Col>\n            </Row>\n          </Col>\n          <Col span={8}>\n            <Row gutter={Size.MEDIUM}>\n              <Col>\n                <Text>Fundamentals score:</Text>\n                <Tooltip\n                  title=\"Each fundamental parameter is given a weight and a weighted average is computed. More importance is given to profit margins and profit/revenue growth.\"\n                  placement=\"top\"\n                  color={Color.white}\n                  overlayInnerStyle={{\n                    color: Color.primary,\n                    padding: Size.MEDIUM,\n                    borderRadius: Size.SMALL,\n                  }}>\n                  <InfoCircleFilled\n                    style={{\n                      color: Color.tertiary,\n                      fontSize: Size.MEDIUM,\n                      cursor: 'pointer',\n                      marginLeft: Size.EXTRA_SMALL,\n                    }}\n                  />\n                </Tooltip>\n              </Col>\n              <Col>\n                <Typography.Link onClick={onClickViewAll} style={{ fontWeight: 'bold' }}>\n                  See all\n                </Typography.Link>\n              </Col>\n            </Row>\n            <Box size={{ top: Size.MEDIUM }}>\n              <StarsRating rating={stock.fundamentalsScore + 0.2} />\n            </Box>\n          </Col>\n          <Col span={8}>\n            <Row\n              style={{ marginTop: -Size.SMALL }}\n              gutter={[Size.SMALL, Size.EXTRA_SMALL]}\n              align=\"middle\">\n              <Col span={12}>\n                <Text color={Color.secondary}>Current price</Text>\n              </Col>\n              <Col span={12}>\n                <Text bold size={Size.LARGE}>\n                  ${round(stock.stats.currentPrice)}\n                </Text>\n              </Col>\n              <Col span={12}>\n                <Text color={Color.secondary}>Est. fair price</Text>\n                <Tooltip\n                  title=\"This price is calculated depending on the given settings, and may vary greatly given different parameters\"\n                  placement=\"top\"\n                  color={Color.white}\n                  overlayInnerStyle={{\n                    color: Color.primary,\n                    padding: Size.MEDIUM,\n                    borderRadius: Size.SMALL,\n                  }}>\n                  <InfoCircleFilled\n                    style={{\n                      color: Color.tertiary,\n                      fontSize: Size.MEDIUM,\n                      cursor: 'pointer',\n                      marginLeft: Size.EXTRA_SMALL,\n                    }}\n                  />\n                </Tooltip>\n              </Col>\n              <Col span={12}>\n                <Text bold size={Size.LARGE}>\n                  ${round(stock.fairPrice)}\n                </Text>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n      </Box>\n    </Fragment>\n  );\n};\n\ninterface StockPanelProps {\n  stock?: Stock;\n  onClickClose: VoidFunction;\n}\n\nexport const StockPanel = ({ stock: _stock, onClickClose }: StockPanelProps) => {\n  const [stock, setStock] = useState<Stock | undefined>(_stock);\n  const [statsVisible, setStatsVisible] = useState(false);\n  const [chartVisible, setChartVisible] = useState(false);\n\n  useEffect(() => {\n    if (_stock != null) {\n      setStock(_stock);\n      setStatsVisible(false);\n    } else {\n      setTimeout(() => setStock(undefined), 1000);\n    }\n  }, [_stock?.symbol]);\n\n  useEffect(() => {\n    if (stock != null) {\n      setTimeout(() => setChartVisible(true), 2000);\n    } else {\n      setChartVisible(false);\n    }\n  }, [stock]);\n\n  if (stock == null) {\n    return null;\n  }\n\n  return (\n    <div className={styles.panel}>\n      <div className={styles.close} onClick={onClickClose}>\n        <PlusOutlined />\n      </div>\n      <div style={{ position: 'relative', zIndex: 1 }}>\n        <Row gutter={Size.MEDIUM} align=\"middle\">\n          <Col>\n            <Text bold size={Size.LARGE}>\n              {stock.symbol}\n            </Text>\n          </Col>\n          <Col>\n            <Typography.Link\n              style={{ fontWeight: 'bold' }}\n              href={`https://finance.yahoo.com/quote/${stock.symbol}`}\n              target=\"_blank\">\n              Details (Yahoo)\n            </Typography.Link>\n          </Col>\n        </Row>\n        <Box size={{ top: Size.EXTRA_SMALL }}>\n          <AnimatePresence exitBeforeEnter>\n            {statsVisible ? (\n              <motion.div\n                key=\"stats\"\n                transition={{ duration: 0.4, ease: [0.86, 0, 0.07, 1] }}\n                initial={{ x: 50, opacity: 0 }}\n                animate={{ x: 0, opacity: 1 }}\n                exit={{ x: 50, opacity: 0 }}>\n                <Stats stats={stock.stats} onClickBack={() => setStatsVisible(false)} />\n              </motion.div>\n            ) : (\n              <motion.div\n                key=\"basicInfo\"\n                transition={{ duration: 0.4, ease: [0.86, 0, 0.07, 1] }}\n                initial={{ scale: 0.8, opacity: 0 }}\n                animate={{ scale: 1, opacity: 1 }}\n                exit={{ scale: 0.8, opacity: 0 }}>\n                <BasicInfo onClickViewAll={() => setStatsVisible(true)} stock={stock} />\n              </motion.div>\n            )}\n          </AnimatePresence>\n        </Box>\n      </div>\n      <div className={styles.disclaimer}>\n        <Text light size={Size.MEDIUM - 3} color={getSectorColors(stock.profile.sector).default}>\n          *Prices updated daily, fundamentals updated quarterly\n        </Text>\n      </div>\n      {!chartVisible ? (\n        <div className={styles.spinner}>\n          <Spin\n            style={{ color: getSectorColors(stock.profile.sector).default }}\n            indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}\n          />\n        </div>\n      ) : null}\n      <div className={cx(styles.chart, { [styles.visible]: chartVisible })}>\n        <TradingViewChart symbol={stock.symbol} sector={stock.profile.sector} />\n      </div>\n    </div>\n  );\n};\n","import { css } from '@emotion/css';\nimport {\n  PanInfo,\n  Variants,\n  animate,\n  motion,\n  useDragControls,\n  useMotionValue,\n  useTransform,\n} from 'framer-motion';\nimport { ReactNode, useEffect } from 'react';\n\nimport { Size } from '../utils';\n\nconst TOP_HEIGHT = 370;\n\nconst styles = {\n  container: css`\n    position: relative;\n    width: 100%;\n    height: 100%;\n    perspective: 1000px;\n  `,\n  top: css`\n    width: 100%;\n    height: ${TOP_HEIGHT}px;\n    position: absolute;\n    left: 0;\n    top: 0;\n    z-index: -1;\n  `,\n  bottom: css`\n    height: 100%;\n    position: relative;\n  `,\n};\n\nconst topVariants: Variants = {\n  hidden: {\n    opacity: 0,\n    y: 30,\n    scale: 0.7,\n    rotateX: 15,\n  },\n};\n\nconst totalY = TOP_HEIGHT + Size.LARGE;\n\nconst bottomVariants: Variants = {\n  default: {\n    y: 0,\n  },\n  compact: (progress: number) => ({\n    y: totalY * progress,\n  }),\n};\n\ninterface AnimatedScrollContainerProps {\n  top: ReactNode;\n  bottom: ReactNode;\n  active: boolean;\n  onResetPanel: VoidFunction;\n}\n\nexport const AnimatedScrollContainer = ({\n  top,\n  bottom,\n  active,\n  onResetPanel,\n}: AnimatedScrollContainerProps) => {\n  const dragControls = useDragControls();\n  const scrollYOffset = useMotionValue(0);\n  const opacity = useTransform(scrollYOffset, [0, totalY], [0, 1]);\n  const y = useTransform(scrollYOffset, [0, totalY], [30, 0]);\n  const scale = useTransform(scrollYOffset, [0, totalY], [0.7, 1]);\n  const rotateX = useTransform(scrollYOffset, [0, totalY], [15, 0]);\n\n  const handleActiveChange = () => {\n    if (!active && scrollYOffset.get() !== 0) {\n      animate(scrollYOffset, 0, {\n        duration: 0.8,\n        ease: [0.86, 0, 0.07, 1],\n      });\n    } else if (active && scrollYOffset.get() !== totalY) {\n      animate(scrollYOffset, totalY, {\n        duration: 0.8,\n        ease: [0.86, 0, 0.07, 1],\n      });\n    }\n  };\n\n  const handleWheelChange = (e: WheelEvent) => {\n    const { deltaY: _deltaY } = e;\n    const deltaY = _deltaY * 1.5;\n    const currentValue = scrollYOffset.get();\n    const newValue = Math.max(\n      Math.min(currentValue + Math.abs(deltaY) * (deltaY < 0 ? 1 : -1), totalY),\n      0,\n    );\n    animate(scrollYOffset, newValue, {\n      duration: 0.1,\n    });\n\n    if (newValue < totalY - totalY / 4) {\n      onResetPanel();\n    }\n  };\n\n  const handleDragPanel = (_: any, info: PanInfo) => {\n    if (info.offset.y < -300) {\n      onResetPanel();\n    }\n\n    document.body.style.cursor = 'grabbing';\n  };\n\n  useEffect(() => {\n    handleActiveChange();\n\n    if (active) {\n      document.addEventListener('wheel', handleWheelChange);\n\n      return () => {\n        document.removeEventListener('wheel', handleWheelChange);\n      };\n    }\n  }, [active]);\n\n  return (\n    <div className={styles.container}>\n      <motion.div\n        initial=\"hidden\"\n        style={{\n          opacity,\n          y,\n          scale,\n          rotateX,\n        }}\n        variants={topVariants}\n        className={styles.top}>\n        {top}\n      </motion.div>\n      <motion.div\n        variants={bottomVariants}\n        initial=\"default\"\n        style={{\n          y: scrollYOffset,\n        }}\n        drag=\"y\"\n        dragControls={dragControls}\n        onDrag={handleDragPanel}\n        onDragEnd={() => (document.body.style.cursor = '')}\n        onDragStart={(e, info) => {\n          if ((e.target as any).dataset.element !== 'handle') {\n            (dragControls as any).componentControls.forEach((entry: any) => {\n              entry.stop(e, info);\n            });\n          }\n        }}\n        dragElastic={0.3}\n        dragConstraints={{ top: active ? totalY : 0, bottom: active ? totalY : 0 }}\n        className={styles.bottom}>\n        {bottom}\n      </motion.div>\n    </div>\n  );\n};\n","import { css, cx } from '@emotion/css';\n\nimport { Color, normalize } from '../../utils';\n\nconst styles = {\n  container: css`\n    position: relative;\n    font-size: 0.9rem;\n    margin: auto;\n    width: 100%;\n\n    > svg {\n      height: 100%;\n      width: 100%;\n    }\n  `,\n  circle: css`\n    stroke-width: 20px;\n    transform-origin: 50% 50%;\n    transform: rotate(18deg);\n    fill: none;\n  `,\n  background: css`\n    stroke: ${Color.grey[2]};\n  `,\n  progress: css`\n    stroke: url(#gradient);\n    filter: url(#shadow);\n  `,\n};\n\ninterface AnimatedProgressProps {\n  value: number;\n  height: number;\n}\n\nexport const AnimatedProgress = ({ value, height }: AnimatedProgressProps) => {\n  const circumference = 84 * Math.PI;\n  const normalizedValue = normalize(value, 100, 0, 40, 100) / 100;\n  const offset = normalizedValue * circumference;\n\n  return (\n    <div\n      className={styles.container}\n      style={{ height: height, transform: `translateY(${height / 2}px)` }}>\n      <svg viewBox=\"0 0 120 120\">\n        <defs>\n          <filter id=\"shadow\" x=\"-100%\" y=\"-100%\" width=\"300%\" height=\"300%\">\n            <feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"2\" />\n            <feOffset dx=\"0\" dy=\"4\" result=\"offsetblur\" />\n            <feFlood floodColor=\"rgba(24, 144, 255, 0.4)\" />\n            <feComposite in2=\"offsetblur\" operator=\"in\" />\n            <feMerge>\n              <feMergeNode />\n              <feMergeNode in=\"SourceGraphic\" />\n            </feMerge>\n          </filter>\n        </defs>\n        <linearGradient\n          id=\"gradient\"\n          x1=\"0%\"\n          y1=\"50%\"\n          x2=\"80%\"\n          y2=\"0%\"\n          gradientUnits=\"userSpaceOnUse\">\n          <stop offset=\"0%\" style={{ stopColor: Color.blue.primary, stopOpacity: 1 }} />\n          <stop offset=\"100%\" style={{ stopColor: Color.geekblue[4], stopOpacity: 1 }} />\n        </linearGradient>\n        <circle cx=\"60\" cy=\"60\" r=\"42\" className={cx(styles.circle, styles.background)} />\n        <circle\n          cx=\"60\"\n          cy=\"60\"\n          r=\"42\"\n          strokeLinecap=\"round\"\n          data-element=\"circle\"\n          className={cx(styles.circle, styles.progress)}\n          style={{ strokeDasharray: `${offset}, ${circumference}` }}\n        />\n      </svg>\n    </div>\n  );\n};\n","import { CheckOutlined } from '@ant-design/icons';\nimport { css, cx } from '@emotion/css';\nimport { animate, motion, useMotionTemplate, useMotionValue, useTransform } from 'framer-motion';\nimport { useEffect, useState } from 'react';\n\nimport { Color, Size } from '../../utils';\nimport { Box } from '../Box';\nimport { Text } from '../Text';\n\nconst HANDLE_WIDTH = 50;\nconst SLIDER_WIDTH = 300;\n\nconst styles = {\n  slider: css`\n    position: relative;\n    width: ${SLIDER_WIDTH + HANDLE_WIDTH / 2}px;\n  `,\n  backgroundTrack: css`\n    width: 100%;\n    height: 10px;\n    background: ${Color.grey[2]};\n    border-radius: ${Size.LARGE}px;\n  `,\n  filledTrack: css`\n    position: absolute;\n    left: 0;\n    top: 0;\n    height: 100%;\n    z-index: 1;\n    height: 10px;\n    border-radius: ${Size.LARGE}px;\n    background: linear-gradient(\n      270deg,\n      ${Color.volcano.primary} 2.49%,\n      ${Color.orange.primary} 107.46%\n    );\n    box-shadow: 0px 4px 8px rgba(255, 100, 38, 0.4);\n\n    &::before {\n      content: ' ';\n      position: absolute;\n      top: 100%;\n      left: 0;\n      width: 100%;\n      height: 15px;\n      filter: blur(40px);\n      opacity: 0.4;\n      background: ${Color.volcano.primary};\n      z-index: 0;\n    }\n  `,\n  blue: css`\n    background: linear-gradient(270deg, ${Color.blue.primary} 2.49%, ${Color.geekblue[4]} 107.46%);\n    box-shadow: 0px 4px 8px rgba(24, 144, 255, 0.4);\n\n    &::before {\n      background: ${Color.blue.primary};\n    }\n  `,\n  handle: css`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: ${HANDLE_WIDTH}px;\n    height: 30px;\n    background: ${Color.white};\n    position: absolute;\n    left: 0;\n    top: -10px;\n    z-index: 2;\n    border-radius: ${Size.LARGE}px;\n    box-shadow: 0px 4px 7px rgba(0, 0, 0, 0.15), 0px 9px 23px -1px rgba(0, 11, 49, 0.05);\n\n    &:hover {\n      cursor: pointer;\n    }\n  `,\n};\n\ninterface SliderProps {\n  value: number;\n  onChange: (value: number) => void;\n  onConfirm: VoidFunction;\n  color?: 'orange' | 'blue';\n}\n\nexport const Slider = ({ value, onChange, onConfirm, color = 'orange' }: SliderProps) => {\n  const [canConfirm, setCanConfirm] = useState(true);\n  const x = useMotionValue(0);\n  const _width = useTransform(x, (value) => value / 3);\n  const width = useMotionTemplate`${_width}%`;\n\n  useEffect(() => {\n    _width.onChange((latest) => {\n      onChange(Math.round(Math.max(Math.min(latest, 100), 0)));\n    });\n  }, []);\n\n  useEffect(() => {\n    const controls = animate(x, value * 3, {\n      duration: 0.8,\n      ease: [0.86, 0, 0.07, 1],\n    });\n\n    return controls.stop;\n  }, []);\n\n  return (\n    <div>\n      <div className={styles.slider}>\n        <div className={styles.backgroundTrack} />\n        <motion.div\n          className={styles.handle}\n          drag=\"x\"\n          style={{ x }}\n          dragElastic={0}\n          dragTransition={{ power: 0 }}\n          whileHover={{ scale: 1.05 }}\n          whileTap={{ scale: 0.95 }}\n          transition={{ duration: 0.4, ease: [0.86, 0, 0.07, 1] }}\n          onDragStart={() => setCanConfirm(false)}\n          onDragEnd={() => {\n            setTimeout(() => {\n              setCanConfirm(true);\n            }, 200);\n          }}\n          onClick={canConfirm ? onConfirm : undefined}\n          dragConstraints={{\n            top: 0,\n            left: -HANDLE_WIDTH / 2,\n            right: SLIDER_WIDTH,\n            bottom: 0,\n          }}>\n          <CheckOutlined\n            style={{\n              color: color === 'blue' ? Color.blue.primary : Color.volcano.primary,\n              strokeWidth: 100,\n              stroke: color === 'blue' ? Color.blue.primary : Color.volcano.primary,\n            }}\n          />\n        </motion.div>\n        <motion.div\n          className={cx(styles.filledTrack, { [styles.blue]: color === 'blue' })}\n          style={{ width }}\n        />\n      </div>\n      <Box size={{ top: Size.LARGE }} style={{ textAlign: 'center' }}>\n        <Text light color={Color.tertiary}>\n          Click to confirm\n        </Text>\n      </Box>\n    </div>\n  );\n};\n","import { css } from '@emotion/css';\n\nimport { Color, Size } from '../../utils';\nimport { Box } from '../Box';\nimport { Text } from '../Text';\nimport { Title } from '../Title';\nimport { AnimatedProgress } from './AnimatedProgress';\nimport { Slider } from './Slider';\n\nconst styles = {\n  margin: css`\n    margin-top: -${Size.EXTRA_LARGE}px;\n  `,\n  gradientText: css`\n    display: inline-block;\n    position: relative;\n    background: linear-gradient(90deg, ${Color.blue.primary}, 50%, ${Color.geekblue[4]} 60.61%);\n    background-clip: text;\n    -webkit-text-fill-color: transparent;\n    text-shadow: 0px 4px 8px rgba(24, 144, 255, 0.4);\n\n    z-index: 1;\n\n    &::before {\n      content: ' ';\n      position: absolute;\n      top: 70%;\n      left: 0;\n      width: 100%;\n      height: 15px;\n      filter: blur(40px);\n      opacity: 0.4;\n      background: ${Color.blue.primary};\n      z-index: 0;\n    }\n  `,\n  chart: css`\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    overflow: hidden;\n  `,\n};\n\ninterface MarginProps {\n  value: number;\n  onChange: (value: number) => void;\n  onConfirm: VoidFunction;\n}\n\nexport const Margin = ({ value, onChange, onConfirm }: MarginProps) => {\n  return (\n    <div className={styles.margin}>\n      <Title inversed={false} level={1} align=\"center\">\n        Then, the margin of safety you require\n      </Title>\n      <Box size={Size.LARGE} style={{ textAlign: 'center' }}>\n        <Text>\n          Lower margin means more risk taken, resulting in more stocks to pick from. More risk means\n          higher chance of failure\n        </Text>\n      </Box>\n      <Box size={{ top: Size.LARGE * 3 }} style={{ textAlign: 'center' }}>\n        <div className={styles.gradientText}>\n          <Text size={Size.EXTRA_LARGE * 2}>+{value}</Text>\n          <Text size={Size.EXTRA_LARGE}>%</Text>\n        </div>\n      </Box>\n      <Box size={{ top: Size.LARGE * 3 }} style={{ display: 'flex', justifyContent: 'center' }}>\n        <Slider color=\"blue\" value={value} onChange={onChange} onConfirm={onConfirm} />\n      </Box>\n      <div className={styles.chart}>\n        <AnimatedProgress value={value} height={500} />\n      </div>\n    </div>\n  );\n};\n","import { css } from '@emotion/css';\nimport { useEffect, useState } from 'react';\n\nimport { Color } from '../../utils';\n\nfunction _randomBetween(min: number, max: number) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nconst POINTS_COUNT = 101;\n\nconst styles = {\n  chart: css`\n    position: relative;\n  `,\n  svg: css`\n    transform-origin: bottom;\n    transform: translateY(2px) scale(1.05);\n    path {\n      stroke: ${Color.volcano[6]};\n      stroke-width: 2;\n      fill: url(#gradient);\n    }\n  `,\n};\n\nconst randomSequence = [...Array(POINTS_COUNT)].map(() => _randomBetween(0, 400));\n\nconst OFFSET = 40;\n\ninterface AnimatedChartProps {\n  value: number;\n  height: number;\n}\n\nexport const AnimatedChart = ({ value, height }: AnimatedChartProps) => {\n  const [key, setKey] = useState(Math.random());\n  const width = window.innerWidth + OFFSET * 2;\n  const heights = [...Array(POINTS_COUNT)].map(\n    (_, i) => (i / 100) * width * (((value / 100) * height) / width),\n  );\n\n  const handleResize = () => {\n    setKey(Math.random());\n  };\n\n  useEffect(() => {\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  return (\n    <div className={styles.chart} style={{ height }}>\n      <svg\n        key={key}\n        className={styles.svg}\n        height={height}\n        width={width}\n        style={{ marginLeft: -OFFSET / 2 }}\n        viewBox={`0 -${OFFSET} ${width} ${height + OFFSET}`}>\n        <linearGradient\n          id=\"gradient\"\n          x1=\"0%\"\n          y1=\"0%\"\n          x2=\"100%\"\n          y2=\"100%\"\n          gradientUnits=\"userSpaceOnUse\"\n          gradientTransform=\"rotate(80)\">\n          <stop offset=\"0%\" style={{ stopColor: Color.volcano.primary, stopOpacity: 1 }} />\n          <stop offset=\"100%\" style={{ stopColor: Color.orange.primary, stopOpacity: 0.5 }} />\n        </linearGradient>\n        <path\n          d={`M -${OFFSET} ${height}\n        ${heights\n          .map((pointHeight, i) => {\n            const ri = width * (i / 100);\n            return `L ${ri} ${\n              height -\n              (pointHeight +\n                (randomSequence[i] *\n                  (Math.max(i / 100), 0.4) *\n                  Math.min(Math.max(pointHeight, 20), 120)) /\n                  height)\n            }`;\n          })\n          .join(' ')}\n         L ${width} ${height - (value / 100) * height} L ${width} ${height}Z`}\n        />\n      </svg>\n    </div>\n  );\n};\n","import { css } from '@emotion/css';\n\nimport { Color, Size } from '../../utils';\nimport { Box } from '../Box';\nimport { Text } from '../Text';\nimport { Title } from '../Title';\nimport { AnimatedChart } from './AnimatedChart';\nimport { Slider } from './Slider';\n\nconst styles = {\n  roi: css`\n    margin-top: -${Size.EXTRA_LARGE}px;\n  `,\n  gradientText: css`\n    display: inline-block;\n    position: relative;\n    background: linear-gradient(\n      90deg,\n      ${Color.orange.primary},\n      50%,\n      ${Color.volcano.primary} 60.61%\n    );\n    background-clip: text;\n    -webkit-text-fill-color: transparent;\n    text-shadow: 0px 4px 8px rgba(255, 100, 38, 0.4);\n\n    z-index: 1;\n\n    &::before {\n      content: ' ';\n      position: absolute;\n      top: 70%;\n      left: 0;\n      width: 100%;\n      height: 15px;\n      filter: blur(40px);\n      opacity: 0.4;\n      background: ${Color.volcano.primary};\n      z-index: 0;\n    }\n  `,\n  chart: css`\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    overflow: hidden;\n  `,\n};\n\ninterface ROIProps {\n  value: number;\n  onChange: (value: number) => void;\n  onConfirm: VoidFunction;\n}\n\nexport const ROI = ({ value, onChange, onConfirm }: ROIProps) => {\n  return (\n    <div className={styles.roi}>\n      <Title inversed={false} level={1} align=\"center\">\n        First, adjust your desired rate of return.\n      </Title>\n      <Box size={Size.LARGE} style={{ textAlign: 'center' }}>\n        <Text>Over the next 10 years, year over year. Recommended: 10-30.</Text>\n      </Box>\n      <Box size={{ top: Size.LARGE * 3 }} style={{ textAlign: 'center' }}>\n        <div className={styles.gradientText}>\n          <Text size={Size.EXTRA_LARGE * 2}>+{value}</Text>\n          <Text size={Size.EXTRA_LARGE}>%</Text>\n        </div>\n      </Box>\n      <Box size={{ top: Size.LARGE * 3 }} style={{ display: 'flex', justifyContent: 'center' }}>\n        <Slider value={value} onChange={onChange} onConfirm={onConfirm} />\n      </Box>\n      <div className={styles.chart}>\n        <AnimatedChart height={400} value={value} />\n      </div>\n    </div>\n  );\n};\n","import { css } from '@emotion/css';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport { useState } from 'react';\n\nimport { Margin } from './Margin';\nimport { ROI } from './ROI';\n\nconst styles = {\n  settings: css`\n    height: 100%;\n    width: 100%;\n  `,\n};\n\ninterface SettingsProps {\n  roi: number;\n  onChangeRoi: (roi: number) => void;\n  margin: number;\n  onChangeMargin: (margin: number) => void;\n  onClickClose: VoidFunction;\n}\n\nexport const Settings = ({\n  roi,\n  onChangeRoi,\n  margin,\n  onChangeMargin,\n  onClickClose,\n}: SettingsProps) => {\n  const [page, setPage] = useState(1);\n  return (\n    <div className={styles.settings}>\n      <AnimatePresence exitBeforeEnter>\n        {page === 1 ? (\n          <motion.div\n            key=\"roi\"\n            animate={{ opacity: 1 }}\n            initial={{ opacity: 0 }}\n            exit={{ opacity: 0 }}>\n            <ROI value={roi} onChange={onChangeRoi} onConfirm={() => setPage(2)} />\n          </motion.div>\n        ) : (\n          <motion.div\n            key=\"margin\"\n            animate={{ opacity: 1 }}\n            initial={{ opacity: 0 }}\n            exit={{ opacity: 0 }}>\n            <Margin\n              value={margin}\n              onChange={onChangeMargin}\n              onConfirm={() => {\n                onClickClose();\n              }}\n            />\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </div>\n  );\n};\n","import { LoadingOutlined, QuestionCircleFilled } from '@ant-design/icons';\nimport { css, cx, injectGlobal } from '@emotion/css';\nimport { Button, Col, Row, Spin, Tooltip } from 'antd';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport { Fragment, useState } from 'react';\n\nimport {\n  AnimatedScrollContainer,\n  Box,\n  Logo,\n  Panel,\n  Settings,\n  StockPanel,\n  Title,\n} from './components';\nimport { SortByEnum } from './components/SortBy';\nimport { Stock } from './types';\nimport { Color, Size, ValueOf, computeRankScores, useFetchStocks } from './utils';\n\ninjectGlobal`\n  html, body {\n    font-family: 'Raleway', sans-serif;\n\n    *::selection {\n      background: ${Color.volcano.primary}; /* WebKit/Blink Browsers */\n    }\n  }\n`;\n\nconst styles = {\n  app: css`\n    height: 100vh;\n    overflow: hidden;\n    display: flex;\n    flex-direction: column;\n    background: linear-gradient(17deg, ${Color.volcano[5]} 2.04%, ${Color.orange[5]} 90.35%);\n  `,\n  light: css`\n    background: ${Color.white};\n  `,\n  container: css`\n    width: 100%;\n    max-width: 1000px;\n    height: calc(100% + 400px);\n    margin: 0 auto;\n    padding-top: 100px;\n    transform: translateY(-100px);\n    pointer-events: none;\n\n    * {\n      pointer-events: auto;\n    }\n  `,\n  button: css`\n    color: ${Color.white} !important;\n    border-color: ${Color.white} !important;\n    border-radius: ${Size.EXTRA_SMALL}px;\n\n    &:hover {\n      background: rgba(255, 255, 255, 0.3) !important;\n    }\n  `,\n  loader: css`\n    width: 100%;\n    margin-top: ${Size.EXTRA_LARGE}px;\n    text-align: center;\n  `,\n};\n\nexport const App = () => {\n  const { isLoading, stocks = [] } = useFetchStocks();\n  const [margin, setMargin] = useState<number>(50);\n  const [roi, setRoi] = useState<number>(20);\n  const [activeStock, setActiveStock] = useState<Stock>();\n  const [sortBy, setSortBy] = useState<ValueOf<typeof SortByEnum>>(SortByEnum.ALPHABETICAL);\n  const [isSettingsVisible, setIsSettingsVisible] = useState(true);\n\n  const safety = 1 - margin / 100;\n\n  const computedStocks = isSettingsVisible ? [] : computeRankScores(roi / 100, safety, stocks);\n  const sortedStocks = [...computedStocks].sort((a, b) => {\n    if (sortBy === SortByEnum.FUNDAMENTALS) {\n      return b.fundamentalsScore - a.fundamentalsScore;\n    } else if (sortBy === SortByEnum.DISCOUNT) {\n      return a.discountScore - b.discountScore;\n    } else {\n      return a.name.localeCompare(b.name);\n    }\n  });\n\n  return (\n    <div className={cx(styles.app, { [styles.light]: isSettingsVisible })}>\n      <Row justify=\"space-between\">\n        <Col>\n          <Box size={Size.LARGE} inset>\n            <Logo inversed={!isSettingsVisible} />\n          </Box>\n        </Col>\n        {!isSettingsVisible ? (\n          <Col>\n            <Box size={Size.LARGE} inset>\n              <Button onClick={() => setIsSettingsVisible(true)} ghost className={styles.button}>\n                Adjust settings\n              </Button>\n            </Box>\n          </Col>\n        ) : null}\n      </Row>\n      {isSettingsVisible ? (\n        <Settings\n          onClickClose={() => setIsSettingsVisible(false)}\n          roi={roi}\n          onChangeMargin={setMargin}\n          margin={margin}\n          onChangeRoi={setRoi}\n        />\n      ) : (\n        <Fragment>\n          <Box size={Size.LARGE}>\n            <Title level={1} align=\"center\">\n              Stocks at a discounted price for <span style={{ fontStyle: 'italic' }}>you</span>\n            </Title>\n            <Title align=\"center\" level={3}>\n              We found {sortedStocks.length} <span style={{ fontStyle: 'italic' }}>value</span>{' '}\n              stocks out of 11.244 that match your profile{' '}\n              <Tooltip\n                title=\"Only stocks with enough public financial data and solid fundamentals are considered. Growth rate > 0, profit margins > 0, revenue growth > 10%. Also, no penny stocks.\"\n                placement=\"right\"\n                color={Color.white}\n                overlayInnerStyle={{\n                  color: Color.primary,\n                  padding: Size.MEDIUM,\n                  borderRadius: Size.SMALL,\n                }}>\n                <QuestionCircleFilled\n                  style={{\n                    fontSize: Size.MEDIUM,\n                    cursor: 'pointer',\n                    transform: 'translateY(-2px)',\n                  }}\n                />\n              </Tooltip>\n            </Title>\n          </Box>\n          <Box\n            style={{ display: 'flex', flex: 1, minHeight: 0 }}\n            inset\n            size={{ top: Size.SMALL, left: Size.SMALL, right: Size.SMALL }}>\n            <div className={styles.container}>\n              <AnimatedScrollContainer\n                onResetPanel={() => setActiveStock(undefined)}\n                active={activeStock != null}\n                top={\n                  <StockPanel stock={activeStock} onClickClose={() => setActiveStock(undefined)} />\n                }\n                bottom={\n                  <AnimatePresence>\n                    {isLoading ? (\n                      <div className={styles.loader}>\n                        <Spin\n                          style={{ color: Color.white }}\n                          indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}\n                        />\n                      </div>\n                    ) : (\n                      <motion.div\n                        style={{ height: '100%' }}\n                        transition={{ duration: 0.8, ease: [0.86, 0, 0.07, 1] }}\n                        initial={{ y: 100, opacity: 0 }}\n                        animate={{ y: 0, opacity: 1 }}>\n                        <Panel\n                          onChangeSort={setSortBy}\n                          hidden={activeStock != null}\n                          stocks={sortedStocks}\n                          onClickStock={setActiveStock}\n                        />\n                      </motion.div>\n                    )}\n                  </AnimatePresence>\n                }\n              />\n            </div>\n          </Box>\n        </Fragment>\n      )}\n    </div>\n  );\n};\n","import 'antd/dist/antd.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","export * from './hooks';\nexport * from './rank-stocks';\nexport * from './round';\nexport * from './color';\nexport * from './size';\nexport * from './get-sector-colors';\nexport * from './animation';\nexport * from './value-of';\nexport * from './normalize';\n","import * as sv from '@ant-design/colors';\n\nexport const Color = {\n  ...sv,\n  white: '#ffffff',\n  grey: [\n    '#ffffff',\n    '#fafafa',\n    '#f5f5f5',\n    '#f0f0f0',\n    '#d9d9d9',\n    '#bfbfbf',\n    '#8c8c8c',\n    '#595959',\n    '#434343',\n    '#262626',\n    '#1f1f1f',\n    '#141414',\n    '#000000',\n  ],\n  primary: '#262626',\n  secondary: '#bfbfbf',\n  tertiary: '#d9d9d9',\n};\n","export * from './stock';\nexport * from './symbol';\n","export function round(value: number): number {\n  return Math.round((value + Number.EPSILON) * 100) / 100;\n}\n"],"sourceRoot":""}